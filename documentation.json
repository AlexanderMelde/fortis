{
    "pipes": [],
    "interfaces": [
        {
            "name": "Gym",
            "id": "interface-Gym-00f59b4c63bfd8ac212563665cf4325739027fca4b99bdb5779ed58d6fd11f07a0ad5a8dd26b0481c7ca129fe31a7bbd882acd960336a14be400829c85f68984",
            "file": "src/app/models/gym.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Gym {\r\n  id: number,\r\n  name: string,\r\n  description: string,\r\n  price: string,\r\n  imageUrl: string,\r\n  quantity: number\r\n}\r\n",
            "properties": [
                {
                    "name": "description",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "imageUrl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "price",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "quantity",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 7
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "Observable",
            "id": "interface-Observable-8f545048279a25a1a8e378e0216c21d37c2ba4faf7975e4c4873b8733fe934f74d092f9ed1ffbf616344d1b58753fe1c160eb2aa71c05dffaae4fc4ba2ed77d4",
            "file": "src/app/helpers/base/base.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import {Component, OnDestroy} from \"@angular/core\";\nimport {Observable, Subject, Subscribable, takeUntil} from \"rxjs\";\n\n@Component({ template: '' })\nexport abstract class BaseComponent implements OnDestroy{\n  // protected constructor() {  }\n  // Don't let the outside world trigger this destroy signal.\n  // It's only meant to be trigger by the component when destroyed!\n  private _destroy = new Subject<void>();\n  public destroy$ = this._destroy as Observable<void>;\n  /** Lifecycle hook called by angular framework when extended class dies. */\n  ngOnDestroy(): void {\n    this._destroy.next();\n  }\n}\n\ndeclare module 'rxjs/internal/Observable' {\n  interface Observable<T> {\n    dieWith(comp: BaseComponent): Observable<T>;\n  }\n}\n\nObservable.prototype.dieWith = function<T>(comp: BaseComponent): Observable<T> {\n  return this.pipe(takeUntil(comp.destroy$));\n};\n",
            "properties": [],
            "indexSignatures": [],
            "kind": 167,
            "methods": [
                {
                    "name": "dieWith",
                    "args": [
                        {
                            "name": "comp",
                            "type": "BaseComponent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<T>",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "comp",
                            "type": "BaseComponent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ]
        },
        {
            "name": "Task",
            "id": "interface-Task-d4d37e919bf153b85cd73cf76b3d81234228b20ae5a9a500ccf0118c584fdae333a8448d8becdbaa20c0fdaf47fd111516c76691ee76980e2a62f442b656bd75",
            "file": "src/app/models/task.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Task {\r\n  id: string;\r\n  title: string;\r\n  state: string;\r\n}\r\n",
            "properties": [
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "state",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "User",
            "id": "interface-User-dcc5c3137cd472dd0002d85b562efd23162e3eff53ca4438a6251e6c46e3b8299076255380d1d42f386510cb6f2cbaab49fa5b5f253be459cdc3869428c5c400",
            "file": "src/stories/User.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface User {}\r\n",
            "properties": [],
            "indexSignatures": [],
            "methods": []
        }
    ],
    "injectables": [
        {
            "name": "ApiService",
            "id": "injectable-ApiService-b06b8a7f3c69ffd02b4ff0e3e91e5a18a728be9555e79b8062fa346743502335f8790b9e3adc946f74040fa4b3d7e154ba1e5d317e222791dd9906b76c5bb036",
            "file": "src/app/services/api.service.ts",
            "properties": [
                {
                    "name": "SERVER_URL",
                    "defaultValue": "\"http://localhost:3000/gyms\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methods": [
                {
                    "name": "handleError",
                    "args": [
                        {
                            "name": "error",
                            "type": "HttpErrorResponse",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "error",
                            "type": "HttpErrorResponse",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "sendGetRequest",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import {Injectable} from '@angular/core';\nimport {HttpClient, HttpErrorResponse} from \"@angular/common/http\";\n\nimport {throwError} from 'rxjs';\nimport {catchError} from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n  private SERVER_URL = \"http://localhost:3000/gyms\";\n\n  constructor(private httpClient: HttpClient) {\n  }\n\n  handleError(error: HttpErrorResponse) {\n    let errorMessage: string;\n    if (error.error instanceof ErrorEvent) {\n      // Client-side errors\n      errorMessage = `Error: ${error.error.message}`;\n    } else {\n      // Server-side errors\n      errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\n    }\n    console.log(errorMessage);\n    return throwError(() => errorMessage);\n  }\n  public sendGetRequest() {\n    return this.httpClient.get(this.SERVER_URL).pipe(catchError(this.handleError));\n  }\n\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "httpClient",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "httpClient",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "DataService",
            "id": "injectable-DataService-ea141adb3045431c4b6f0560720cd346a3dd881f51c0dad3b2c23f4eb0da38401542a4a1bda4c6591fb4d533a7be4f4d423a12b3a03a69e9d3521c83a48c6dd4",
            "file": "src/app/services/data.service.ts",
            "properties": [
                {
                    "name": "currentMusicIsFav",
                    "defaultValue": "this.musicIsFavSource.asObservable()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "currentMusicIsPaused",
                    "defaultValue": "this.musicIsPausedSource.asObservable()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "currentMusicProgress",
                    "defaultValue": "this.musicProgressSource.asObservable()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "currentUsername",
                    "defaultValue": "this.usernameSource.asObservable()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "musicIsFavSource",
                    "defaultValue": "new BehaviorSubject(false)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "musicIsPausedSource",
                    "defaultValue": "new BehaviorSubject(false)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "musicProgressSource",
                    "defaultValue": "new BehaviorSubject(80)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "usernameSource",
                    "defaultValue": "new BehaviorSubject('Kim Steele')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 8,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methods": [
                {
                    "name": "changeMusicIsFav",
                    "args": [
                        {
                            "name": "d",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "d",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "changeMusicIsPaused",
                    "args": [
                        {
                            "name": "d",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "d",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "changeMusicProgress",
                    "args": [
                        {
                            "name": "d",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "d",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "changeUsername",
                    "args": [
                        {
                            "name": "d",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "d",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n  private usernameSource = new BehaviorSubject('Kim Steele');\n  private musicProgressSource = new BehaviorSubject(80);\n  private musicIsPausedSource = new BehaviorSubject(false);\n  private musicIsFavSource = new BehaviorSubject(false);\n\n  currentUsername = this.usernameSource.asObservable();\n  currentMusicProgress = this.musicProgressSource.asObservable();\n  currentMusicIsPaused = this.musicIsPausedSource.asObservable();\n  currentMusicIsFav = this.musicIsFavSource.asObservable();\n\n  constructor() { }\n\n  changeUsername(d: string) {\n    this.usernameSource.next(d)\n  }\n\n  changeMusicProgress(d: number) {\n    this.musicProgressSource.next(d)\n  }\n\n  changeMusicIsPaused(d: boolean) {\n    this.musicIsPausedSource.next(d)\n  }\n\n  changeMusicIsFav(d: boolean) {\n    this.musicIsFavSource.next(d)\n  }\n\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 16
            },
            "type": "injectable"
        },
        {
            "name": "TimerService",
            "id": "injectable-TimerService-45d96c62ee95e3174eef46e93abd23d32812556f8b8d8fb2f0bf28332af7ec4853f32a4a03b2a09f5f2f9776f338a32ea0fae10b604bc41f74e9f44697ac1a0f",
            "file": "src/app/services/timer.service.ts",
            "properties": [
                {
                    "name": "musicIsPaused",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean | undefined",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "musicProgress",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number | undefined",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "sourceInterval$",
                    "defaultValue": "interval(this.updateRate).pipe(takeUntil(this.unsubscribe))",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<number>",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "sourceInterval$Subscription",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription | undefined",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "unsubscribe",
                    "defaultValue": "new Subject()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subject<void>",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "updateRate",
                    "defaultValue": "100",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 15
                }
            ],
            "methods": [
                {
                    "name": "pauseTimer",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 44,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "startTimer",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import {Injectable, OnDestroy, OnInit} from '@angular/core';\nimport {interval, Observable, Subject, Subscription, takeUntil, takeWhile,} from 'rxjs';\nimport {BaseComponent} from \"../helpers/base/base.component\";\nimport {DataService} from \"./data.service\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TimerService extends BaseComponent  {\n  musicProgress: number | undefined;\n  musicIsPaused: boolean | undefined;\n\n  private unsubscribe: Subject<void> = new Subject();\n\n  updateRate = 100; // in ms\n\n  sourceInterval$ : Observable<number> = interval(this.updateRate).pipe(takeUntil(this.unsubscribe));\n  private sourceInterval$Subscription: Subscription | undefined;\n\n  constructor(private data: DataService) {\n    super()\n    this.data.currentMusicProgress.subscribe(d => this.musicProgress = d)\n    this.data.currentMusicIsPaused.subscribe(d => {\n      this.musicIsPaused = d\n      if (this.musicIsPaused) {\n        this.unsubscribe.next();\n        this.unsubscribe.complete();\n      }\n    })\n    this.startTimer()\n  }\n\n  startTimer(){\n    // takeWhile(() => (this.musicIsPaused ?? false)\n    this.sourceInterval$Subscription = this.sourceInterval$.subscribe(n => {\n      if (this.musicProgress !== undefined){\n        this.data.changeMusicProgress(this.musicProgress > 99 ? 0 : (this.musicProgress + this.updateRate / 2000))\n      }\n    });\n  }\n\n\n\n  pauseTimer() {\n    this.sourceInterval$Subscription?.unsubscribe();\n  }\n\n}\n\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "data",
                        "type": "DataService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 18,
                "jsdoctags": [
                    {
                        "name": "data",
                        "type": "DataService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": "BaseComponent",
            "type": "injectable"
        }
    ],
    "guards": [],
    "interceptors": [],
    "classes": [
        {
            "name": "CustomValidators",
            "id": "class-CustomValidators-4ea4ea12651670724179b4824c34b48575f3d158c4be48ec41ab6239e8c7d3d1bab0ce85dae7d77e07faa78ddc0babed4e09913d501548721633b0a54ee0a72c",
            "file": "src/app/helpers/CustomValidators.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { AbstractControl, ValidationErrors, ValidatorFn } from '@angular/forms';\r\n\r\nexport class CustomValidators {\r\n  static MatchValidator(source: string, target: string): ValidatorFn {\r\n    return (control: AbstractControl): ValidationErrors | null => {\r\n      const sourceCtrl = control.get(source);\r\n      const targetCtrl = control.get(target);\r\n\r\n      return sourceCtrl && targetCtrl && sourceCtrl.value !== targetCtrl.value\r\n        ? { mismatch: true }\r\n        : null;\r\n    };\r\n  }\r\n}\r\n",
            "properties": [],
            "methods": [
                {
                    "name": "MatchValidator",
                    "args": [
                        {
                            "name": "source",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "target",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "ValidatorFn",
                    "typeParameters": [],
                    "line": 4,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        124
                    ],
                    "jsdoctags": [
                        {
                            "name": "source",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "target",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        }
    ],
    "directives": [],
    "components": [
        {
            "name": "AboutComponent",
            "id": "component-AboutComponent-0af3d4bd1c9ee41fc5e52df32874079bb0c4b85e86b5ab5e5b5c349f3057e017ff571c3a39b15f377613eeec446368314545c4b6a435ac2e9bab40e2401452f5",
            "file": "src/app/pages/about/about.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-about",
            "styleUrls": [
                "./about.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./about.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.css']\n})\nexport class AboutComponent {\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "img {\r\n  width: 100%;\r\n  height: fit-content;\r\n}\r\n",
                    "styleUrl": "./about.component.css"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"content_width_wrapper\">\n  <h1>About GYMBOX</h1>\n  <p>GYMBOX is a one-of-a-kind premium private gym rental solution. Book your gym, workout privately, anytime, anywhere, you decide!</p>\n  <img ngSrc=\"assets/gym_yellow.jpg\" height=\"696\" width=\"988\"/>\n  <h2>Overview</h2>\n  <p>Welcome to GYMBOX, the premier private gym rental solution designed to provide you with the freedom and flexibility to work out on your own terms. Our mission is to give you complete control over your fitness routine, without the distractions and crowds of a traditional gym.</p>\n  <p>With GYMBOX, you can book a private gym space whenever you want, wherever you want. Whether you prefer to exercise in the morning, afternoon, or evening, we've got you covered. Plus, our state-of-the-art facilities feature the latest equipment and amenities, so you can get the most out of your workout.</p>\n  <p>We believe that fitness should be accessible and enjoyable for everyone, which is why we offer affordable pricing and flexible rental options. You can rent a GYMBOX for as little as one hour, or for as long as you need. Plus, our simple booking process makes it easy to reserve your space and get started on your fitness journey.</p>\n  <p>At GYMBOX, we're committed to providing our clients with a safe and comfortable workout environment. Our gyms are thoroughly cleaned and sanitized between rentals, and we adhere to all recommended safety protocols to ensure your well-being.</p>\n  <h2>Get Started</h2>\n  <p>If you're ready to take your fitness to the next level, join the GYMBOX community today. Book your private gym space, work out on your own terms, and discover the freedom and flexibility of GYMBOX.</p>\n</div>\n\n"
        },
        {
            "name": "AppComponent",
            "id": "component-AppComponent-54ba8baf53e5dd9d89b7f510353fb2778a99b1f9e0a95e18fd4d0c30193419cb8fe1a86f6b151fb8aba3a15e9ef2e96c9a21d6fcd37d0405163e8d81c8865682",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [
                "./app.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "activeLinkIndex",
                    "defaultValue": "-1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "navLinks",
                    "defaultValue": "[\r\n    {\r\n      label: 'Home',\r\n      link: '/home',\r\n      index: 0\r\n    }, {\r\n      label: 'Room',\r\n      link: '/room',\r\n      index: 1\r\n    }, {\r\n      label: 'About',\r\n      link: '/about',\r\n      index: 2\r\n    }\r\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type[]",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "opened_end",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "opened_start",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "screenWidth",
                    "defaultValue": "1024",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 12
                }
            ],
            "methodsClass": [
                {
                    "name": "getScreenSize",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 41,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'window:resize', ['$event']"
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 45,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "window:resize",
                    "args": [],
                    "argsDecorator": [
                        "$event"
                    ],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 41
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component, HostListener} from '@angular/core';\r\nimport {Router} from \"@angular/router\";\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  opened_start: boolean = false;\r\n  opened_end: boolean = false;\r\n  screenWidth : number = 1024;\r\n\r\n  navLinks: {\r\n    label: string;\r\n    link: string;\r\n    index: number;\r\n  }[] = [\r\n    {\r\n      label: 'Home',\r\n      link: '/home',\r\n      index: 0\r\n    }, {\r\n      label: 'Room',\r\n      link: '/room',\r\n      index: 1\r\n    }, {\r\n      label: 'About',\r\n      link: '/about',\r\n      index: 2\r\n    }\r\n  ];\r\n  activeLinkIndex = -1;\r\n\r\n  constructor(private router: Router) {\r\n    // this.navLinks =\r\n    this.getScreenSize();\r\n\r\n  }\r\n  @HostListener('window:resize', ['$event'])\r\n  getScreenSize() {\r\n    this.screenWidth = window.innerWidth;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.router.events.subscribe(() => {\r\n      const navLinkEntry = this.navLinks.find(tab => tab.link === '.' + this.router.url)\r\n      if (navLinkEntry !== undefined) {\r\n        this.activeLinkIndex = this.navLinks.indexOf(navLinkEntry);\r\n      }\r\n      // else{\r\n      //   this.activeLinkIndex = 3;\r\n      // }\r\n    });\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "mat-toolbar {\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  overflow: auto;\r\n\r\n}\r\n.profile-image-bg {\r\n  background-image: url(\"https://source.unsplash.com/500x500/?profile+photo+sport+portrait+adult\");\r\n  background-size: cover;\r\n  vertical-align: middle;\r\n}\r\n\r\n.profile-image-bg:focus-visible {\r\n  outline: 2px solid white;\r\n}\r\n\r\n#page_wrapper {\r\n  /*width: calc(100% - 2rem);*/\r\n  max-width: var(--max-content-width);\r\n  margin: 0 auto;\r\n  /*padding-bottom: var(--min-content-wrap-margin);*/\r\n  /*height: calc(100% - var(--min-content-wrap-margin));*/\r\n}\r\nnav[mat-tab-nav-bar] {\r\n  margin: 0 auto;\r\n  position: fixed;\r\n  bottom: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  background: white;\r\n  z-index: 5;\r\n}\r\n\r\n/*mat-sidenav-container {*/\r\n/*  position: absolute;*/\r\n/*  top: 0;*/\r\n/*  bottom: 0;*/\r\n/*  left: 0;*/\r\n/*  right: 0;*/\r\n/*}*/\r\nmat-sidenav-container {\r\n  height: calc(100% - var(--top-toolbar-height) - var(--bot-toolbar-height));\r\n}\r\nmat-sidenav-content {\r\n}\r\nmat-sidenav.nav_side {\r\n  width: 200px;\r\n}\r\n.nav_header {\r\n  position: sticky;\r\n  top: 0;\r\n  z-index: 5;\r\n}\r\n.title_link {\r\n  color: inherit;\r\n  text-decoration: inherit;\r\n\r\n}\r\n",
                    "styleUrl": "./app.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 33,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<mat-toolbar color=\"primary\" class=\"nav_header mat-elevation-z5\">\r\n    <span class=\"nav-start\">\r\n      <button mat-icon-button class=\"toggle_nav_side_btn\" aria-label=\"Button to open the main menu.\"\r\n              (click)=\"sidenavStart.toggle()\">\r\n        <mat-icon>menu</mat-icon>\r\n      </button>\r\n    </span>\r\n  <span class=\"nav-mid\">\r\n      <a routerLink=\"/home\" class=\"title_link\">GYMBOX</a>\r\n    </span>\r\n  <span class=\"nav-end\">\r\n      <a mat-icon-button class=\"example-icon face-icon profile-image-bg\" aria-label=\"Button to open the user profile.\"\r\n         routerLink=\"/user\">\r\n      </a>\r\n    </span>\r\n</mat-toolbar>\r\n\r\n<nav mat-tab-nav-bar class=\"nav_footer\" [backgroundColor]=\"'primary'\" [tabPanel]=\"tabPanel\">\r\n  <a mat-tab-link\r\n     *ngFor=\"let navLinkEntry of navLinks\"\r\n     [routerLink]=\"navLinkEntry.link\"\r\n     routerLinkActive=\"routerLinkActive\"\r\n     #rla=\"routerLinkActive\"\r\n     [active]=\"rla.isActive\">{{navLinkEntry.label}}</a>\r\n</nav>\r\n\r\n<mat-sidenav-container autosize>\r\n  <mat-sidenav #sidenavStart fixedInViewport fixedTopGap=\"{{screenWidth < 600 ? 56 : 64}}\" fixedBottomGap=\"48\"\r\n               mode=\"over\" [(opened)]=\"opened_start\" role=\"navigation\" class=\"nav_side\">\r\n    <mat-nav-list>\r\n      <a mat-list-item disabled>All Pages:</a>\r\n\r\n      <a mat-list-item\r\n         *ngFor=\"let navLinkEntry of navLinks\"\r\n         [routerLink]=\"navLinkEntry.link\"\r\n         routerLinkActive=\"active\"\r\n      >\r\n        {{navLinkEntry.label}}\r\n      </a>\r\n      <mat-divider></mat-divider>\r\n      <a mat-list-item routerLink=\"/user\">User</a>\r\n      <a mat-list-item routerLink=\"/book_gym\">Book gym</a>\r\n      <mat-divider></mat-divider>\r\n      <a mat-list-item routerLink=\"/welcome\">Welcome</a>\r\n      <a mat-list-item routerLink=\"/login\">Login</a>\r\n      <a mat-list-item routerLink=\"/register\">Register</a>\r\n      <a mat-list-item disabled></a>\r\n      <a mat-list-item (click)=\"sidenavEnd.toggle()\" class=\"open_toolbox_side\">Workout Tools</a>\r\n\r\n    </mat-nav-list>\r\n  </mat-sidenav>\r\n  <mat-sidenav #sidenavEnd fixedInViewport fixedTopGap=\"{{screenWidth < 600 ? 56 : 64}}\" fixedBottomGap=\"48\"\r\n               position=\"end\" mode=\"over\" [(opened)]=\"opened_end\" class=\"toolbox_side\">\r\n    <app-workout-tools></app-workout-tools>\r\n  </mat-sidenav>\r\n  <mat-sidenav-content role=\"main\">\r\n    <div id=\"page_wrapper\">\r\n      <mat-tab-nav-panel #tabPanel>\r\n        <router-outlet></router-outlet>\r\n      </mat-tab-nav-panel>\r\n    </div>\r\n  </mat-sidenav-content>\r\n</mat-sidenav-container>\r\n\r\n\r\n"
        },
        {
            "name": "BaseComponent",
            "id": "component-BaseComponent-8f545048279a25a1a8e378e0216c21d37c2ba4faf7975e4c4873b8733fe934f74d092f9ed1ffbf616344d1b58753fe1c160eb2aa71c05dffaae4fc4ba2ed77d4",
            "file": "src/app/helpers/base/base.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "styleUrls": [],
            "styles": [],
            "template": "",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_destroy",
                    "defaultValue": "new Subject<void>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "destroy$",
                    "defaultValue": "this._destroy as Observable<void>",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nLifecycle hook called by angular framework when extended class dies.",
                    "description": "<p>Lifecycle hook called by angular framework when extended class dies.</p>\n"
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component, OnDestroy} from \"@angular/core\";\nimport {Observable, Subject, Subscribable, takeUntil} from \"rxjs\";\n\n@Component({ template: '' })\nexport abstract class BaseComponent implements OnDestroy{\n  // protected constructor() {  }\n  // Don't let the outside world trigger this destroy signal.\n  // It's only meant to be trigger by the component when destroyed!\n  private _destroy = new Subject<void>();\n  public destroy$ = this._destroy as Observable<void>;\n  /** Lifecycle hook called by angular framework when extended class dies. */\n  ngOnDestroy(): void {\n    this._destroy.next();\n  }\n}\n\ndeclare module 'rxjs/internal/Observable' {\n  interface Observable<T> {\n    dieWith(comp: BaseComponent): Observable<T>;\n  }\n}\n\nObservable.prototype.dieWith = function<T>(comp: BaseComponent): Observable<T> {\n  return this.pipe(takeUntil(comp.destroy$));\n};\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "implements": [
                "OnDestroy"
            ]
        },
        {
            "name": "BlindsHelpComponent",
            "id": "component-BlindsHelpComponent-db5a971e1d98c736185e6dd8bd0a35d0b685ae00eaa58184c8ddcc4ec5c79ebe28865ef8ee19ed51927718fed6fb4dffa29d14659059404dd3aa2be2830548fe",
            "file": "src/app/modals/help/blinds-help/blinds-help.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-blinds-help",
            "styleUrls": [
                "./blinds-help.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./blinds-help.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-blinds-help',\n  templateUrl: './blinds-help.component.html',\n  styleUrls: ['./blinds-help.component.css']\n})\nexport class BlindsHelpComponent {\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./blinds-help.component.css"
                }
            ],
            "stylesData": "",
            "templateData": "<h2 mat-dialog-title>Blinds</h2>\n<mat-dialog-content class=\"mat-typography\">\n  <p>This room uses manual curtains.</p>\n  <p>Feel free to close them during your session.</p>\n  <p>Please open all the curtains again before leaving the gymbox.</p>\n</mat-dialog-content>\n<mat-dialog-actions align=\"end\">\n  <!--  <button mat-button mat-dialog-close=\"mat-dialog-close\">Cancel</button>-->\n  <button mat-button [mat-dialog-close]=\"true\" cdkFocusInitial>OK</button>\n</mat-dialog-actions>\n"
        },
        {
            "name": "BookGymComponent",
            "id": "component-BookGymComponent-e0d3c7aeeaf910e9b5c016861110469d010f13363e9c5c98c399603ce0ad6c680c2722d384d3bb83bcce7b62a978eaf5510ea3c0e723afe9a5681065b64ec987",
            "file": "src/app/pages/book-gym/book-gym.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-book-gym",
            "styleUrls": [
                "./book-gym.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./book-gym.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "firstFormGroup",
                    "defaultValue": "this._formBuilder.group({\r\n    firstCtrl: ['', Validators.required],\r\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "secondFormGroup",
                    "defaultValue": "this._formBuilder.group({\r\n    secondCtrl: ['', Validators.required],\r\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "stepperOrientation",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<StepperOrientation>",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "thirdFormGroup",
                    "defaultValue": "this._formBuilder.group({\r\n    thirdCtrl: ['', Validators.required],\r\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 20
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component} from '@angular/core';\r\nimport {FormBuilder, Validators} from '@angular/forms';\r\nimport {BreakpointObserver} from '@angular/cdk/layout';\r\nimport {StepperOrientation} from '@angular/material/stepper';\r\nimport {Observable} from 'rxjs';\r\nimport {map} from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-book-gym',\r\n  templateUrl: './book-gym.component.html',\r\n  styleUrls: ['./book-gym.component.css']\r\n})\r\nexport class BookGymComponent {\r\n  firstFormGroup = this._formBuilder.group({\r\n    firstCtrl: ['', Validators.required],\r\n  });\r\n  secondFormGroup = this._formBuilder.group({\r\n    secondCtrl: ['', Validators.required],\r\n  });\r\n  thirdFormGroup = this._formBuilder.group({\r\n    thirdCtrl: ['', Validators.required],\r\n  });\r\n  stepperOrientation: Observable<StepperOrientation>;\r\n\r\n  constructor(private _formBuilder: FormBuilder, breakpointObserver: BreakpointObserver) {\r\n    this.stepperOrientation = breakpointObserver\r\n      .observe('(min-width: 800px)')\r\n      .pipe(map(({matches}) => (matches ? 'horizontal' : 'vertical')));\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".mat-mdc-form-field {\r\n  margin-top: 16px;\r\n}\r\nmat-card {\r\n  overflow: hidden;\r\n}\r\n",
                    "styleUrl": "./book-gym.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "breakpointObserver",
                        "type": "BreakpointObserver",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 23,
                "jsdoctags": [
                    {
                        "name": "_formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "breakpointObserver",
                        "type": "BreakpointObserver",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<div class=\"content_width_wrapper\">\r\n  <h1>Book Gym</h1>\r\n  <mat-card>\r\n    <mat-stepper\r\n      class=\"example-stepper\"\r\n      [orientation]=\"(stepperOrientation | async)!\">\r\n      <mat-step [stepControl]=\"firstFormGroup\" label=\"Time & Date\">\r\n        <form [formGroup]=\"firstFormGroup\">\r\n          <mat-form-field appearance=\"fill\">\r\n            <mat-label>Name</mat-label>\r\n            <input matInput placeholder=\"Last name, First name\" formControlName=\"firstCtrl\" required>\r\n          </mat-form-field>\r\n          <div>\r\n            <button mat-button matStepperNext>Next</button>\r\n          </div>\r\n        </form>\r\n      </mat-step>\r\n      <mat-step [stepControl]=\"secondFormGroup\" label=\"Personal Trainer\">\r\n        <form [formGroup]=\"secondFormGroup\">\r\n          <mat-form-field appearance=\"fill\">\r\n            <mat-label>Address</mat-label>\r\n            <input matInput formControlName=\"secondCtrl\" placeholder=\"Ex. 1 Main St, New York, NY\"\r\n                   required>\r\n          </mat-form-field>\r\n          <div>\r\n            <button mat-button matStepperPrevious>Back</button>\r\n            <button mat-button matStepperNext>Next</button>\r\n          </div>\r\n        </form>\r\n      </mat-step>\r\n      <mat-step [stepControl]=\"thirdFormGroup\" label=\"Extras\">\r\n        <form [formGroup]=\"thirdFormGroup\">\r\n          <mat-form-field appearance=\"fill\">\r\n            <mat-label>Phone number</mat-label>\r\n            <input matInput formControlName=\"thirdCtrl\" placeholder=\"Ex. 12345678\" required>\r\n          </mat-form-field>\r\n          <div>\r\n            <button mat-button matStepperPrevious>Back</button>\r\n            <button mat-button matStepperNext>Next</button>\r\n          </div>\r\n        </form>\r\n      </mat-step>\r\n      <mat-step>\r\n        <ng-template matStepLabel>Done</ng-template>\r\n        <p>You are now done.</p>\r\n        <div>\r\n          <button mat-button matStepperPrevious>Back</button>\r\n        </div>\r\n      </mat-step>\r\n    </mat-stepper>\r\n  </mat-card>\r\n</div>\r\n"
        },
        {
            "name": "BookingCardComponent",
            "id": "component-BookingCardComponent-be4dde28b82726ce823cb7dd78f1370d09a3c40a4537979a1ee9a0191dc32c9ff242cd35250400e0b26a7eeef12f79a40aeae672af075712af1f1d282a1c1fb0",
            "file": "src/app/ui-components/booking-card/booking-card.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-booking-card",
            "styleUrls": [
                "./booking-card.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./booking-card.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "coach",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "string | undefined",
                    "decorators": []
                },
                {
                    "name": "course",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "string | undefined",
                    "decorators": []
                },
                {
                    "name": "date",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "DateTime | undefined",
                    "decorators": []
                },
                {
                    "name": "description",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string | undefined",
                    "decorators": []
                },
                {
                    "name": "duration",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "Duration | undefined",
                    "decorators": []
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string | undefined",
                    "decorators": []
                },
                {
                    "name": "ongoing",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "boolean | undefined",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "faAngleRight",
                    "defaultValue": "faAngleRight",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "modifierKind": [
                        122,
                        144
                    ]
                },
                {
                    "name": "faClock",
                    "defaultValue": "faClock",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "modifierKind": [
                        122,
                        144
                    ]
                },
                {
                    "name": "faLocationPin",
                    "defaultValue": "faLocationPin",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "modifierKind": [
                        122,
                        144
                    ]
                },
                {
                    "name": "faUser",
                    "defaultValue": "faUser",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "modifierKind": [
                        122,
                        144
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component, Input} from '@angular/core';\nimport {faAngleRight, faClock, faLocationPin, faUser } from '@fortawesome/free-solid-svg-icons';\nimport {DateTime, Duration} from \"luxon\";\n\n@Component({\n  selector: 'app-booking-card',\n  templateUrl: './booking-card.component.html',\n  styleUrls: ['./booking-card.component.css']\n})\nexport class BookingCardComponent {\n  @Input() name: string | undefined;\n  @Input() description: string | undefined;\n  @Input() course: string | undefined;\n  @Input() coach: string | undefined;\n  @Input() date: DateTime | undefined;\n  @Input() duration: Duration | undefined;\n  @Input() ongoing: boolean | undefined;\n\n  protected readonly faUser = faUser;\n  protected readonly faClock = faClock;\n  protected readonly faAngleRight = faAngleRight;\n  protected readonly faLocationPin = faLocationPin;\n}\n\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host {\r\n  display: block;\r\n}\r\n\r\nmat-card {\r\n  width: 250px;\r\n}\r\n\r\n.course-details {\r\n  display: flex;\r\n  gap: calc(var(--min-content-wrap-margin) / 2 );\r\n  white-space: normal;\r\n}\r\n.course-image {\r\n  height: 40px;\r\n  border-radius: 50%;\r\n  margin-bottom: calc(var(--min-content-wrap-margin) / 2 );\r\n}\r\n\r\n.course-title, .course-coach {\r\n  font-weight: 600;\r\n\r\n}\r\n.header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: flex-start;\r\n  padding: calc(var(--min-content-wrap-margin) / 2 );\r\n}\r\n.header button[mat-icon-button] {\r\n  flex-shrink: 0;\r\n  color: #c5c5c5;\r\n}\r\n.header button[mat-stroked-button] {\r\n  align-self: center;\r\n  margin-right: calc(var(--min-content-wrap-margin) / 2 );\r\n}\r\n.header > div {\r\n  padding-left: calc(var(--min-content-wrap-margin) / 4 );\r\n\r\n}\r\n",
                    "styleUrl": "./booking-card.component.css"
                }
            ],
            "stylesData": "",
            "templateData": "<mat-card>\n  <div class=\"header\">\n  <div>\n      <mat-card-title>{{date?.toRelativeCalendar()?.toUpperCase() | titlecase}}</mat-card-title>\n      <mat-card-subtitle>{{date?.toFormat('HH:mm')}} – {{date?.plus({minutes: 90})?.toFormat('HH:mm')}}</mat-card-subtitle>\n  </div>\n\n    <button *ngIf=\"ongoing\" mat-stroked-button class=\"start-button\"  routerLink=\"/room\">\n      START\n    </button>\n    <button *ngIf=\"!ongoing\"  aria-label=\"Example icon-button with a bell icon\" mat-icon-button\n            class=\"edit-button\" matTooltip=\"Change Reservation\" routerLink=\"/book_gym\">\n      <mat-icon>edit</mat-icon>\n    </button>\n  </div>\n  <mat-card-content>\n    <div class=\"course-details\">\n      <img class=\"course-image\" ngSrc=\"https://source.unsplash.com/100x100/?workout\" alt=\"Photo of a Workout\" height=\"40\" width=\"40\">\n      <div>\n        <span class=\"course-title\">{{course}}</span>\n        with\n        <span class=\"course-coach\">{{coach}}</span>\n      </div>\n    </div>\n    <app-icon-list>\n      <app-icon-list-item [icon]=\"faLocationPin\" [name]=\"name\" description=\"City Center\"></app-icon-list-item>\n      <app-icon-list-item [icon]=\"faUser\" name=\"You\" description=\"& Max\"></app-icon-list-item>\n    </app-icon-list>\n<!--    <mat-card-actions align=\"end\">-->\n<!--      <a *ngIf=\"ongoing\" mat-button routerLink=\"/room\"> START WORKOUT</a>-->\n<!--      <a *ngIf=\"!ongoing\" mat-button routerLink=\"/book_gym\"> Change Reservation</a>-->\n<!--    </mat-card-actions>-->\n  </mat-card-content>\n\n</mat-card>\n"
        },
        {
            "name": "BookTrainerComponent",
            "id": "component-BookTrainerComponent-7f9103c20bcdee61d27b60f78d41bc14775d86527bc89f9e79e64a3439272b1f5286d9486584b8a57270be4f40f3e4727b2fc75e0e2f814ede0982328e24e610",
            "file": "src/app/pages/book-trainer/book-trainer.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-book-trainer",
            "styleUrls": [
                "./book-trainer.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./book-trainer.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-book-trainer',\n  templateUrl: './book-trainer.component.html',\n  styleUrls: ['./book-trainer.component.css']\n})\nexport class BookTrainerComponent {\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./book-trainer.component.css"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"content_width_wrapper\">\n  <mat-card-title>Book a personal trainer</mat-card-title>\n  <p>This site is under construction!</p>\n</div>\n"
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-8ceaf520f96e5437b08eeda244d84efb29effe62ddca4fc38eaa229085c2a1126c5715e61445bae741505aca1e4d377b350cb05fadd1dc45d9b2bbf7527029f1",
            "file": "src/stories/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-button",
            "styleUrls": [
                "./button.css"
            ],
            "styles": [],
            "template": "<button   type=\"button\"\n   (click)=\"onClick.emit($event)\"\n   [ngClass]=\"classes\"\n   [ngStyle]=\"{ 'background-color': backgroundColor }\"\n >\n   {{ label }}\n </button>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nWhat background color to use\n",
                    "description": "<p>What background color to use</p>\n",
                    "line": 26,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "'Button'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "pos": 747,
                            "end": 761,
                            "flags": 4227072,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 325,
                            "tagName": {
                                "pos": 748,
                                "end": 756,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "required"
                            },
                            "comment": ""
                        }
                    ],
                    "rawdescription": "\n\nButton contents\n\n",
                    "description": "<p>Button contents</p>\n",
                    "line": 40,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "primary",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nIs this the principal call to action on the page?\n",
                    "description": "<p>Is this the principal call to action on the page?</p>\n",
                    "line": 20,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nHow large should the button be?\n",
                    "description": "<p>How large should the button be?</p>\n",
                    "line": 32,
                    "type": "\"small\" | \"medium\" | \"large\"",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptional click handler\n",
                    "description": "<p>Optional click handler</p>\n",
                    "line": 46,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'storybook-button',\r\n  template: ` <button\r\n    type=\"button\"\r\n    (click)=\"onClick.emit($event)\"\r\n    [ngClass]=\"classes\"\r\n    [ngStyle]=\"{ 'background-color': backgroundColor }\"\r\n  >\r\n    {{ label }}\r\n  </button>`,\r\n  styleUrls: ['./button.css'],\r\n})\r\nexport default class ButtonComponent {\r\n  /**\r\n   * Is this the principal call to action on the page?\r\n   */\r\n  @Input()\r\n  primary = false;\r\n\r\n  /**\r\n   * What background color to use\r\n   */\r\n  @Input()\r\n  backgroundColor?: string;\r\n\r\n  /**\r\n   * How large should the button be?\r\n   */\r\n  @Input()\r\n  size: 'small' | 'medium' | 'large' = 'medium';\r\n\r\n  /**\r\n   * Button contents\r\n   *\r\n   * @required\r\n   */\r\n  @Input()\r\n  label = 'Button';\r\n\r\n  /**\r\n   * Optional click handler\r\n   */\r\n  @Output()\r\n  onClick = new EventEmitter<Event>();\r\n\r\n  public get classes(): string[] {\r\n    const mode = this.primary ? 'storybook-button--primary' : 'storybook-button--secondary';\r\n\r\n    return ['storybook-button', `storybook-button--${this.size}`, mode];\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-button {\r\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\r\n  font-weight: 700;\r\n  border: 0;\r\n  border-radius: 3em;\r\n  cursor: pointer;\r\n  display: inline-block;\r\n  line-height: 1;\r\n}\r\n.storybook-button--primary {\r\n  color: white;\r\n  background-color: #1ea7fd;\r\n}\r\n.storybook-button--secondary {\r\n  color: #333;\r\n  background-color: transparent;\r\n  box-shadow: rgba(0, 0, 0, 0.15) 0 0 0 1px inset;\r\n}\r\n.storybook-button--small {\r\n  font-size: 12px;\r\n  padding: 10px 16px;\r\n}\r\n.storybook-button--medium {\r\n  font-size: 14px;\r\n  padding: 11px 20px;\r\n}\r\n.storybook-button--large {\r\n  font-size: 16px;\r\n  padding: 12px 24px;\r\n}\r\n",
                    "styleUrl": "./button.css"
                }
            ],
            "stylesData": "",
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 48
                    }
                }
            }
        },
        {
            "name": "ClimateHelpComponent",
            "id": "component-ClimateHelpComponent-a5cd7471962bec870522608e70816e25c10b46d8d05557a259077a2d6e5d942f35fb2d19c59c8ccdb6161295165d1bb40eaaa1c79375386af046036628e241b7",
            "file": "src/app/modals/help/climate-help/climate-help.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-climate-help",
            "styleUrls": [
                "./climate-help.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./climate-help.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "coolingOn",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "value",
                    "defaultValue": "22",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-climate-help',\n  templateUrl: './climate-help.component.html',\n  styleUrls: ['./climate-help.component.css']\n})\nexport class ClimateHelpComponent {\n  coolingOn: boolean = true;\n  value: number = 22;\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "mat-slide-toggle {\r\n  display: block;\r\n  margin-bottom: var(--min-content-wrap-margin);\r\n}\r\n.example-label-container {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin: var(--min-content-wrap-margin) 0;\r\n}\r\n.example-name-label  {\r\n  font-weight: 650;\r\n}\r\n.example-value-label {\r\n  font-weight: 600;\r\n}\r\n\r\nmat-slider {\r\n  width: 100%;\r\n  margin: 0;\r\n}\r\n",
                    "styleUrl": "./climate-help.component.css"
                }
            ],
            "stylesData": "",
            "templateData": "<h2 mat-dialog-title>Climate</h2>\n<mat-dialog-content class=\"mat-typography\">\n  <p>This room is equipped with a smart A/C cooling system.</p>\n  <p>Please choose a desired temperature:</p>\n  <div class=\"example-label-container\">\n    <label class=\"example-name-label\" id=\"example-name-label\">Temperature</label>\n    <label class=\"example-value-label\">{{value}} °C</label>\n  </div>\n  <mat-slider [max]=30 [min]=15 [step]=0.5>\n    <input [(ngModel)]=\"value\" matSliderThumb>\n  </mat-slider>\n\n  <mat-slide-toggle [ngModel]=\"coolingOn\">Enable Turbo Mode for cooling!</mat-slide-toggle>\n  <mat-slide-toggle>Enable additional Heating</mat-slide-toggle>\n\n  <p>Alternatively, you can also use the in-room control panel located in the entrance area.</p>\n\n\n</mat-dialog-content>\n<mat-dialog-actions align=\"end\">\n  <!--  <button mat-button mat-dialog-close=\"mat-dialog-close\">Cancel</button>-->\n  <button [mat-dialog-close]=\"true\" cdkFocusInitial mat-button>OK</button>\n</mat-dialog-actions>\n"
        },
        {
            "name": "DoorHelpComponent",
            "id": "component-DoorHelpComponent-65a05c4cb79ba410e6d282a5caf200ceec31bb21fd88f8c3dc43c3a8244d6db4ffb2575fca68eead7e090e04b6d1dbaab9a8f8b100f67d44e8054cec8a0535e3",
            "file": "src/app/modals/help/door-help/door-help.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-door-help",
            "styleUrls": [
                "./door-help.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./door-help.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-door-help',\n  templateUrl: './door-help.component.html',\n  styleUrls: ['./door-help.component.css']\n})\nexport class DoorHelpComponent {\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "code {\r\n  font-size: 3rem;\r\n  display: block;\r\n  line-height: 5.5rem;\r\n  text-align: center;\r\n}\r\n",
                    "styleUrl": "./door-help.component.css"
                }
            ],
            "stylesData": "",
            "templateData": "<h2 mat-dialog-title>Door</h2>\n<mat-dialog-content class=\"mat-typography\">\n  Your Door Unlock Code is:\n\n  <code>5467</code>\n\n  Please confirm it with the <kbd>#</kbd> key.\n</mat-dialog-content>\n<mat-dialog-actions align=\"end\">\n  <!--  <button mat-button mat-dialog-close=\"mat-dialog-close\">Cancel</button>-->\n  <button mat-button [mat-dialog-close]=\"true\" cdkFocusInitial>OK</button>\n</mat-dialog-actions>\n"
        },
        {
            "name": "GymCardComponent",
            "id": "component-GymCardComponent-66956fa51ca7ab38a148c2594fa50ffc508ff90b53dc2f786b5e4b91923fd2db06ce70667b5725dd80a99034a4ed0e47e59eecf004592ec6f04c6bb3fd679e64",
            "file": "src/app/ui-components/gym-card/gym-card.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-gym-card",
            "styleUrls": [
                "./gym-card.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./gym-card.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "description",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string | undefined",
                    "decorators": []
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string | undefined",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "faAngleRight",
                    "defaultValue": "faAngleRight",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        122,
                        144
                    ]
                },
                {
                    "name": "faClock",
                    "defaultValue": "faClock",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        122,
                        144
                    ]
                },
                {
                    "name": "faLocationPin",
                    "defaultValue": "faLocationPin",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        122,
                        144
                    ]
                },
                {
                    "name": "faUser",
                    "defaultValue": "faUser",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        122,
                        144
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component, Input} from '@angular/core';\r\nimport {faAngleRight, faClock, faLocationPin, faUser} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\n@Component({\r\n  selector: 'app-gym-card',\r\n  templateUrl: './gym-card.component.html',\r\n  styleUrls: ['./gym-card.component.css']\r\n})\r\nexport class GymCardComponent {\r\n  @Input() name: string | undefined;\r\n  @Input() description: string | undefined;\r\n\r\n  protected readonly faUser = faUser;\r\n  protected readonly faClock = faClock;\r\n  protected readonly faAngleRight = faAngleRight;\r\n  protected readonly faLocationPin = faLocationPin;\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host {\r\n  display: block;\r\n}\r\nmat-toolbar {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin: 0 auto;\r\n  width: calc(100% - 3 * var(--min-content-wrap-margin));\r\n  max-width: var(--max-content-width);\r\n  overflow-x: auto;\r\n  overflow-y: hidden;\r\n}\r\n\r\nmat-card-content {\r\n  margin-top: var(--min-content-wrap-margin);\r\n}\r\n\r\nmat-card-content>mat-divider.divider-with-margin {\r\n  margin-top: var(--min-content-wrap-margin);\r\n  margin-bottom: var(--min-content-wrap-margin);\r\n\r\n}\r\n",
                    "styleUrl": "./gym-card.component.css"
                }
            ],
            "stylesData": "",
            "templateData": "<mat-card>\r\n  <mat-card-header>\r\n    <mat-card-title>GYMBOX {{name}}</mat-card-title>\r\n    <mat-card-subtitle>{{description}}</mat-card-subtitle>\r\n  </mat-card-header>\r\n  <img mat-card-image src=\"https://source.unsplash.com/1000x300/?gym\" alt=\"Photo of a Gym\">\r\n  <mat-card-content>\r\n    <app-icon-list>\r\n      <app-icon-list-item [icon]=\"faLocationPin\" [name]=\"name\" description=\"City Center\"></app-icon-list-item>\r\n      <app-icon-list-item [icon]=\"faUser\" name=\"Make you sweat core workout with Jessy\"></app-icon-list-item>\r\n      <app-icon-list-item [icon]=\"faClock\" name=\"12:30 - 14:00\"\r\n                          description=\"(73 minutes remaining)\"></app-icon-list-item>\r\n    </app-icon-list>\r\n    <mat-divider class=\"divider-with-margin\"></mat-divider>\r\n    <mat-card-actions align=\"end\">\r\n      <a mat-button routerLink=\"/book_gym\"> Book gym</a>\r\n    </mat-card-actions>\r\n  </mat-card-content>\r\n\r\n</mat-card>\r\n"
        },
        {
            "name": "HeaderComponent",
            "id": "component-HeaderComponent-bda17aa3451a9f731685153f2587877b8267c32007f05e7abad3581336e6bc02346a1b660e8c69c4d90b4526b6e047b3ac1f4246252c9dc83985c9148aab5e97",
            "file": "src/stories/header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-header",
            "styleUrls": [
                "./header.css"
            ],
            "styles": [],
            "template": "<header>    <div class=\"wrapper\">\n      <div>\n        <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n              fill=\"#FFF\"\n            />\n            <path\n              d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n              fill=\"#555AB9\"\n            />\n            <path\n              d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\"\n              fill=\"#91BAF8\"\n            />\n          </g>\n        </svg>\n        <h1>Acme</h1>\n      </div>\n      <div>\n        <div *ngIf=\"user\">\n          <span class=\"welcome\">\n            Welcome, <b>{{ user.name }}</b\n            >!\n          </span>\n          <storybook-button\n            *ngIf=\"user\"\n            size=\"small\"\n            (onClick)=\"onLogout.emit($event)\"\n            label=\"Log out\"\n          ></storybook-button>\n        </div>\n        <div *ngIf=\"!user\">\n          <storybook-button\n            *ngIf=\"!user\"\n            size=\"small\"\n            class=\"margin-left\"\n            (onClick)=\"onLogin.emit($event)\"\n            label=\"Log in\"\n          ></storybook-button>\n          <storybook-button\n            *ngIf=\"!user\"\n            primary\n            size=\"small\"\n            primary=\"true\"\n            class=\"margin-left\"\n            (onClick)=\"onCreateAccount.emit($event)\"\n            label=\"Sign up\"\n          ></storybook-button>\n        </div>\n      </div>\n    </div>\n  </header>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 65,
                    "type": "User | null",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onCreateAccount",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 74,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogin",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 68,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogout",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 71,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\r\nimport { User } from './User';\r\n\r\n@Component({\r\n  selector: 'storybook-header',\r\n  template: `<header>\r\n    <div class=\"wrapper\">\r\n      <div>\r\n        <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\r\n          <g fill=\"none\" fillRule=\"evenodd\">\r\n            <path\r\n              d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\r\n              fill=\"#FFF\"\r\n            />\r\n            <path\r\n              d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\r\n              fill=\"#555AB9\"\r\n            />\r\n            <path\r\n              d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\"\r\n              fill=\"#91BAF8\"\r\n            />\r\n          </g>\r\n        </svg>\r\n        <h1>Acme</h1>\r\n      </div>\r\n      <div>\r\n        <div *ngIf=\"user\">\r\n          <span class=\"welcome\">\r\n            Welcome, <b>{{ user.name }}</b\r\n            >!\r\n          </span>\r\n          <storybook-button\r\n            *ngIf=\"user\"\r\n            size=\"small\"\r\n            (onClick)=\"onLogout.emit($event)\"\r\n            label=\"Log out\"\r\n          ></storybook-button>\r\n        </div>\r\n        <div *ngIf=\"!user\">\r\n          <storybook-button\r\n            *ngIf=\"!user\"\r\n            size=\"small\"\r\n            class=\"margin-left\"\r\n            (onClick)=\"onLogin.emit($event)\"\r\n            label=\"Log in\"\r\n          ></storybook-button>\r\n          <storybook-button\r\n            *ngIf=\"!user\"\r\n            primary\r\n            size=\"small\"\r\n            primary=\"true\"\r\n            class=\"margin-left\"\r\n            (onClick)=\"onCreateAccount.emit($event)\"\r\n            label=\"Sign up\"\r\n          ></storybook-button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </header>`,\r\n  styleUrls: ['./header.css'],\r\n})\r\nexport default class HeaderComponent {\r\n  @Input()\r\n  user: User | null = null;\r\n\r\n  @Output()\r\n  onLogin = new EventEmitter<Event>();\r\n\r\n  @Output()\r\n  onLogout = new EventEmitter<Event>();\r\n\r\n  @Output()\r\n  onCreateAccount = new EventEmitter<Event>();\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".wrapper {\r\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\r\n  border-bottom: 1px solid rgba(0, 0, 0, 0.1);\r\n  padding: 15px 20px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n}\r\n\r\nsvg {\r\n  display: inline-block;\r\n  vertical-align: top;\r\n}\r\n\r\nh1 {\r\n  font-weight: 900;\r\n  font-size: 20px;\r\n  line-height: 1;\r\n  margin: 6px 0 6px 10px;\r\n  display: inline-block;\r\n  vertical-align: top;\r\n}\r\n\r\nbutton + button {\r\n  margin-left: 10px;\r\n}\r\n\r\n.welcome {\r\n  color: #333;\r\n  font-size: 14px;\r\n  margin-right: 10px;\r\n}\r\n",
                    "styleUrl": "./header.css"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "HelpComponent",
            "id": "component-HelpComponent-bba6be19a9dae036782035e679964dd518ce8c9b4041b268e342a5a9da5a7ee0eacd4ec8a453e6db1995e5e4b0eb1a3fe663cd6e99e2abad830c55dc4a2d3c58",
            "file": "src/app/modals/help/help.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-help",
            "styleUrls": [
                "./help.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./help.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "content_ref",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "decorators": [
                        {
                            "name": "Inject",
                            "stringifiedArguments": "MAT_DIALOG_DATA"
                        }
                    ],
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "help_db",
                    "defaultValue": "helpDatabase",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "methodsClass": [
                {
                    "name": "getHelp",
                    "args": [
                        {
                            "name": "content_ref",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "{ title: string; content: string; }",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "content_ref",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component, Inject} from '@angular/core';\nimport {MAT_DIALOG_DATA} from \"@angular/material/dialog\";\nimport helpDatabase from './help_database.json';\n\n@Component({\n  selector: 'app-help',\n  templateUrl: './help.component.html',\n  styleUrls: ['./help.component.css']\n})\nexport class HelpComponent {\n  help_db: {\n    [content_ref: string]: {\n      title: string;\n      content: string;\n    }\n  } = helpDatabase;\n\n  constructor(@Inject(MAT_DIALOG_DATA) public content_ref: string) {\n  }\n\n  public getHelp(content_ref: string) {\n    if (content_ref in this.help_db) {\n      return this.help_db[content_ref]\n    } else {\n      return {\n        title: \"No specific help\",\n        content: \"Help not found, error code: 404 \" + content_ref\n      }\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./help.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "content_ref",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 16,
                "jsdoctags": [
                    {
                        "name": "content_ref",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<h2 mat-dialog-title>{{getHelp(content_ref).title}}</h2>\n<mat-dialog-content class=\"mat-typography\" [innerHTML]=\"getHelp(content_ref).content\">\n</mat-dialog-content>\n<mat-dialog-actions align=\"end\">\n<!--  <button mat-button mat-dialog-close=\"mat-dialog-close\">Cancel</button>-->\n  <button mat-button [mat-dialog-close]=\"true\" cdkFocusInitial>OK</button>\n</mat-dialog-actions>\n"
        },
        {
            "name": "HomeComponent",
            "id": "component-HomeComponent-923d2e2c184e20ca93f483db27dcc2b252759a78d24f43b84856ef5d04ced2c51a441366dbd2e007fd9fa124f8cd0505637b1b96f1261492c58c016ad8ee3506",
            "file": "src/app/pages/home/home.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-home",
            "styleUrls": [
                "./home.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./home.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "DateTime",
                    "defaultValue": "DateTime",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 74,
                    "modifierKind": [
                        122,
                        144
                    ]
                },
                {
                    "name": "dialog",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatDialog",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "Duration",
                    "defaultValue": "Duration",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 75,
                    "modifierKind": [
                        122,
                        144
                    ]
                },
                {
                    "name": "faAngleRight",
                    "defaultValue": "faAngleRight",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 76,
                    "modifierKind": [
                        122,
                        144
                    ]
                },
                {
                    "name": "gym_list_show_all",
                    "defaultValue": "undefined",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | undefined",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "gym_list_sorting",
                    "defaultValue": "'nearby'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "gyms",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Gym[]",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "isLoading",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "username",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | undefined",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "usernameSubscription",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription | undefined",
                    "optional": false,
                    "description": "",
                    "line": 24
                }
            ],
            "methodsClass": [
                {
                    "name": "get_firstname",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 60,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "loadGyms",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 39,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "openNotifications",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 69,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "openSnackBar",
                    "args": [
                        {
                            "name": "message",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "action",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "message",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "action",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component, OnInit} from '@angular/core';\r\nimport {MatDialog} from \"@angular/material/dialog\";\r\nimport {faAngleRight} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {DateTime, Duration} from \"luxon\";\r\nimport {Subscription} from \"rxjs\";\r\nimport {ApiService} from '../../services/api.service';\r\nimport {Gym} from '../../models/gym.model';\r\nimport {MatSnackBar} from \"@angular/material/snack-bar\";\r\nimport {DataService} from \"../../services/data.service\";\r\nimport {SocialComponent} from \"../../modals/social/social.component\";\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n  gyms: Gym[] = [];\r\n  isLoading: boolean = true;\r\n  gym_list_sorting = 'nearby';\r\n  gym_list_show_all: string | undefined = undefined;\r\n  username: string | undefined;\r\n\r\n  usernameSubscription: Subscription | undefined;\r\n\r\n  constructor(private apiService: ApiService, private _snackBar: MatSnackBar, private data: DataService, public dialog: MatDialog) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.loadGyms()\r\n    this.usernameSubscription = this.data.currentUsername.subscribe(d => this.username = d)\r\n\r\n  }\r\n  ngOnDestroy() {\r\n    if (this.usernameSubscription !== undefined) {\r\n      this.usernameSubscription.unsubscribe();\r\n    }\r\n  }\r\n  loadGyms() {\r\n    this.isLoading = true;\r\n    this.apiService.sendGetRequest().subscribe({\r\n      next: (data: any) => {\r\n        // console.log(\"got gym data\", data);\r\n        this.gyms = data;\r\n        this.isLoading = false;\r\n      },\r\n      error: () => {\r\n        // this.openSnackBar('Connection Error', 'Dismiss');\r\n        this.isLoading = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  openSnackBar(message: string, action: string) {\r\n    this._snackBar.open(message, action, {\r\n      duration: 3000\r\n    });\r\n  }\r\n\r\n  get_firstname() {\r\n    let s;\r\n    if (this.username !== undefined) {\r\n      s = this.username.split(\" \")\r\n      return s[0]\r\n    }else{\r\n      return \"\"\r\n    }\r\n  }\r\n  openNotifications(): void {\r\n    const dialogRef = this.dialog.open(SocialComponent, {\r\n      // data: {name: this.name, animal: this.animal},\r\n    });\r\n  }\r\n  protected readonly DateTime = DateTime;\r\n  protected readonly Duration = Duration;\r\n  protected readonly faAngleRight = faAngleRight;\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".welcome {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n.welcome button {\r\n  flex-shrink: 0;\r\n}\r\nmat-progress-bar {\r\n  margin: var(--min-content-wrap-margin) auto;\r\n}\r\nmat-card {\r\n  margin-top: var(--min-content-wrap-margin);\r\n}\r\n\r\n.list_filters {\r\n  display: flex;\r\n  justify-content: space-between;\r\n}\r\n\r\napp-gym-card {\r\n  margin-top: var(--min-content-wrap-margin);\r\n}\r\n.bookings {\r\n  display: flex;\r\n  overflow-x: auto;\r\n  overflow-y: hidden;\r\n  white-space: nowrap;\r\n  width: 100%;\r\n  padding-bottom: var(--min-content-wrap-margin);\r\n  gap:  var(--min-content-wrap-margin);\r\n  margin-bottom: var(--min-content-wrap-margin);\r\n}\r\n.bookings app-booking-card:first-of-type {\r\n  margin-inline-start: var(--min-content-wrap-margin);\r\n}\r\n.bookings app-booking-card:last-of-type {\r\n  margin-inline-end: var(--min-content-wrap-margin);\r\n}\r\n.workout-from-home {\r\n  flex-direction: column;\r\n}\r\n",
                    "styleUrl": "./home.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "apiService",
                        "type": "ApiService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_snackBar",
                        "type": "MatSnackBar",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "data",
                        "type": "DataService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "dialog",
                        "type": "MatDialog",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 24,
                "jsdoctags": [
                    {
                        "name": "apiService",
                        "type": "ApiService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_snackBar",
                        "type": "MatSnackBar",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "data",
                        "type": "DataService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "dialog",
                        "type": "MatDialog",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"content_width_wrapper\">\r\n  <div class=\"welcome\">\r\n    <div>\r\n      <p><mat-card-title>Good Morning {{get_firstname()}}!</mat-card-title></p>\r\n      <p><mat-card-subtitle>Your upcoming bookings:</mat-card-subtitle></p>\r\n    </div>\r\n    <button aria-label=\"Example icon-button with a bell icon\" mat-icon-button class=\"notification-button\"  (click)=\"openNotifications()\" matTooltip=\"Notifications\">\r\n      <mat-icon matBadge=\"1\" matBadgeColor=\"accent\"  >notifications</mat-icon>\r\n    </button>\r\n  </div>\r\n</div>\r\n  <div class=\"bookings\">\r\n    <app-booking-card name=\"GYMBOX Berlin\" description=\"City Center\" [ongoing]=\"true\" [date]=\"DateTime.now().minus({ minutes: 32 })\"\r\n                      [duration]=\"Duration.fromObject({minutes: 90})\" course=\"Make you sweat core workout\" coach=\"Jessy\"></app-booking-card>\r\n    <app-booking-card  *ngFor=\"let number of [1,2,3]\" [date]=\"DateTime.now().plus({ days: number, hours: number*2 })\" name=\"GYMBOX Berlin\"\r\n                       description=\"City Center\" course=\"Relaxmax Yoga\" coach=\"José\"></app-booking-card>\r\n  </div>\r\n<div class=\"content_width_wrapper\">\r\n  <mat-card-actions class=\"workout-from-home\">\r\n    <mat-card-subtitle>Want to start right away?</mat-card-subtitle>\r\n    <button mat-button mat-stroked-button routerLink=\"/room\">\r\n      Workout from Home\r\n      <fa-icon [icon]=\"faAngleRight\" class=\"caret_icon\"></fa-icon>\r\n    </button>\r\n  </mat-card-actions>\r\n  <p><mat-card-title>\r\n    <ng-container *ngIf=\"gym_list_show_all === undefined\">Available</ng-container>\r\n    <ng-container *ngIf=\"gym_list_show_all === 'show_all'\">All</ng-container>\r\n    Gymboxes\r\n  </mat-card-title></p>\r\n  <div class=\"list_filters\">\r\n    <mat-form-field appearance=\"fill\">\r\n      <mat-label>Sort list</mat-label>\r\n      <mat-select [(value)]=\"gym_list_sorting\">\r\n        <mat-option value=\"nearby\">Nearby</mat-option>\r\n        <mat-option value=\"a_to_z\">A-Z</mat-option>\r\n        <mat-option value=\"price\">Price</mat-option>\r\n      </mat-select>\r\n    </mat-form-field>\r\n\r\n    <mat-chip-listbox aria-label=\"Select to show all or only available gyms\" [(ngModel)]=\"gym_list_show_all\">\r\n      <mat-chip-option value=\"show_all\">Show All</mat-chip-option>\r\n    </mat-chip-listbox>\r\n  </div>\r\n\r\n  <mat-progress-bar\r\n    mode=\"indeterminate\"\r\n    *ngIf=\"isLoading && gyms.length === 0\">\r\n  </mat-progress-bar>\r\n\r\n  <div *ngIf=\"!isLoading && gyms.length === 0\">\r\n\r\n    <mat-card>\r\n      <mat-card-header>\r\n        <mat-card-subtitle>Connection Error</mat-card-subtitle>\r\n        <mat-card-title>Could not connect to GYMBOX database</mat-card-title>\r\n      </mat-card-header>\r\n      <mat-card-content>\r\n        <p>Please view the contents of the other pages of this app.</p>\r\n        <mat-divider></mat-divider>\r\n      </mat-card-content>\r\n      <mat-card-actions align=\"end\">\r\n        <button mat-button color=\"primary\" (click)=\"loadGyms()\">\r\n          RETRY\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n    <h3 style=\"padding-top: 12px\">Offline List of nearby Gyms:</h3>\r\n    <app-gym-card *ngFor=\"let number of [0,1]\" name=\"GYMBOX BERLIN\" description=\"12€\"></app-gym-card>\r\n\r\n  </div>\r\n\r\n  <app-gym-card *ngFor=\"let gym of gyms\" [name]=\"gym.name\" description=\"{{gym.price}} $/ {{gym.quantity}}\"></app-gym-card>\r\n\r\n</div>\r\n"
        },
        {
            "name": "IconListComponent",
            "id": "component-IconListComponent-0456a6b45fb241a1145854843a34af6004fbc2498d89323bf6fc0ea617dd3d0532b1715208edc32005bff1ce7553a121f8992c8fdf5a99c29b880e49048d0a32",
            "file": "src/app/ui-components/icon-list/icon-list.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "host": {},
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-icon-list",
            "styleUrls": [
                "./icon-list.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./icon-list.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-icon-list',\r\n  templateUrl: './icon-list.component.html',\r\n  styleUrls: ['./icon-list.component.css'],\r\n  host: {\r\n    role: 'list'\r\n  }\r\n})\r\nexport class IconListComponent {\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host {\r\n  list-style: none;\r\n  padding: 0;\r\n  margin: 0;\r\n}\r\n",
                    "styleUrl": "./icon-list.component.css"
                }
            ],
            "stylesData": "",
            "templateData": "<ng-content></ng-content>\r\n"
        },
        {
            "name": "IconListItemComponent",
            "id": "component-IconListItemComponent-2901601023807b32fd2ff036c2a90ab55d8012188c3261c0841ee90400a4625895b41674639fb47bc266bb25a4a5c43eaf64d465baf2930439f6b99868d59706",
            "file": "src/app/ui-components/icon-list-item/icon-list-item.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "host": {},
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-icon-list-item",
            "styleUrls": [
                "./icon-list-item.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./icon-list-item.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "description",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "string | undefined",
                    "decorators": []
                },
                {
                    "name": "icon",
                    "defaultValue": "faCircleQuestion",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "IconDefinition",
                    "decorators": []
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "string | undefined",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component, Input} from '@angular/core';\r\nimport {faCircleQuestion, IconDefinition} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\n@Component({\r\n  selector: 'app-icon-list-item',\r\n  templateUrl: './icon-list-item.component.html',\r\n  styleUrls: ['./icon-list-item.component.css'],\r\n  host: {\r\n    role: 'listitem'\r\n  }\r\n})\r\nexport class IconListItemComponent {\r\n  @Input() icon: IconDefinition = faCircleQuestion;\r\n  @Input() name: string | undefined;\r\n  @Input() description: string | undefined;\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host {\r\n  margin-bottom: 0.1rem;\r\n  display: flex;\r\n  flex-direction: row;\r\n}\r\n\r\nfa-icon {\r\n  width: 1rem;\r\n  text-align: center;\r\n  margin-right: 0.5rem;\r\n  flex-shrink: 0;\r\n}\r\nb, i {\r\n  display: inline-block;\r\n  font-style: normal;\r\n  padding-right: 0.5rem;\r\n}\r\n",
                    "styleUrl": "./icon-list-item.component.css"
                }
            ],
            "stylesData": "",
            "templateData": "<fa-icon [icon]=\"icon\"></fa-icon>\r\n<span><b>{{name}}</b><i>{{description}}</i></span>\r\n"
        },
        {
            "name": "InfobannerComponent",
            "id": "component-InfobannerComponent-c273794fd8736b62006a9076478ef7024c7cc03f3362be3bbb89673c6bedb26c4bab25216861619cdd52879be116b8ddf989b5c6c72f0fed5eaee4976b273228",
            "file": "src/app/ui-components/infobanner/infobanner.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-infobanner",
            "styleUrls": [
                "./infobanner.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./infobanner.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-infobanner',\n  templateUrl: './infobanner.component.html',\n  styleUrls: ['./infobanner.component.css']\n})\nexport class InfobannerComponent {\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host {\r\n  padding: var(--min-content-wrap-margin);\r\n  display: flex;\r\n}\r\nmat-icon {\r\n  flex-shrink: 0;\r\n  margin-right: var(--min-content-wrap-margin);\r\n}\r\n",
                    "styleUrl": "./infobanner.component.css"
                }
            ],
            "stylesData": "",
            "templateData": "<mat-icon>info</mat-icon>\n<span><ng-content></ng-content></span>\n"
        },
        {
            "name": "LightsHelpComponent",
            "id": "component-LightsHelpComponent-21b73d4c8df58759b273cae0d1a6aceaa9e544e697cd9d3944a3eedcec9b2a6fa8379e0f0efe9a632e3de8ca6feb477ff01fd9a09629411231daf9bb2ef7cf5e",
            "file": "src/app/modals/help/lights/lights-help.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-lights",
            "styleUrls": [
                "./lights-help.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./lights-help.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "faHandSparkles",
                    "defaultValue": "faHandSparkles",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        122,
                        144
                    ]
                },
                {
                    "name": "faLightbulb",
                    "defaultValue": "faLightbulb",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "faMoon",
                    "defaultValue": "faMoon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        122,
                        144
                    ]
                },
                {
                    "name": "faSun",
                    "defaultValue": "faSun",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        122,
                        144
                    ]
                },
                {
                    "name": "lightCardio",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport {faHandSparkles, faLightbulb, faMoon, faSun} from '@fortawesome/free-solid-svg-icons';\n\n@Component({\n  selector: 'app-lights',\n  templateUrl: './lights-help.component.html',\n  styleUrls: ['./lights-help.component.css']\n})\nexport class LightsHelpComponent {\n  faLightbulb = faLightbulb;\n  lightCardio = true;\n\n  protected readonly faSun = faSun;\n  protected readonly faMoon = faMoon;\n  protected readonly faHandSparkles = faHandSparkles;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "mat-slide-toggle {\r\n  display: block;\r\n  margin-bottom: var(--min-content-wrap-margin);\r\n}\r\n.scene-grid {\r\n  display: grid;\r\n  gap: var(--min-content-wrap-margin);\r\n  grid-template-columns: repeat(3, 1fr);\r\n  justify-items: center;\r\n}\r\n",
                    "styleUrl": "./lights-help.component.css"
                }
            ],
            "stylesData": "",
            "templateData": "<h2 mat-dialog-title>Lights</h2>\n<mat-dialog-content class=\"mat-typography\">\n  <p>This Gym is equipped with smart lights.</p>\n  <p>Use the following buttons to control them:</p>\n  <h2>Scenes</h2>\n  <div class=\"scene-grid\">\n    <mat-sq-button [icon]=\"faSun\">Bright Workout</mat-sq-button>\n    <mat-sq-button [icon]=\"faMoon\">Moody Chillout</mat-sq-button>\n    <mat-sq-button [icon]=\"faHandSparkles\">Photo Lights</mat-sq-button>\n  </div>\n  <h2>Zones</h2>\n  <mat-slide-toggle [ngModel]=\"lightCardio\">Cardio Area</mat-slide-toggle>\n  <mat-slide-toggle>Stretching Area</mat-slide-toggle>\n  <mat-slide-toggle>Weight Lifting Area</mat-slide-toggle>\n  <p>Please note that emergency lighting and motion-activated lights can not be controlled via the app.</p>\n</mat-dialog-content>\n<mat-dialog-actions align=\"end\">\n  <!--  <button mat-button mat-dialog-close=\"mat-dialog-close\">Cancel</button>-->\n  <button mat-button [mat-dialog-close]=\"true\" cdkFocusInitial>OK</button>\n</mat-dialog-actions>\n"
        },
        {
            "name": "LoginComponent",
            "id": "component-LoginComponent-0097013232060646915b136c6ecc1717d01b043b2d2b0ca7f333abb9f834eb773132c8acd240c79ab6e901cdd3f32357979415388314320096fb8243d9b2a443",
            "file": "src/app/pages/login/login.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-login",
            "styleUrls": [
                "./login.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./login.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "loginForm",
                    "defaultValue": "new FormGroup({\n    email: new FormControl('', [Validators.required, Validators.email]),\n    password: new FormControl('', Validators.required)\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "router",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Router",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "onSubmit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport {FormControl, FormGroup, Validators} from \"@angular/forms\";\nimport {Router} from \"@angular/router\";\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent {\n  constructor(public router: Router){}\n\n  loginForm = new FormGroup({\n    email: new FormControl('', [Validators.required, Validators.email]),\n    password: new FormControl('', Validators.required)\n  });\n\n  onSubmit(): void {\n    if (this.loginForm.valid) {\n      this.router.navigate(['home']);\n    }\n\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".full-width-form-input {\r\n  width: 100%;\r\n  margin-top: calc(var(--min-content-wrap-margin) / 2);\r\n}\r\n.login-form {\r\n  margin: var(--min-content-wrap-margin),\r\n}\r\n.spreaded_buttons {\r\n  margin-top: calc(var(--min-content-wrap-margin) / 2);\r\n  display: flex;\r\n  flex-direction: row-reverse;\r\n  justify-content: space-between;\r\n}\r\n@media(max-width: 599.98px) {\r\n  .spreaded_buttons {\r\n    flex-direction: column;\r\n    gap: var(--min-content-wrap-margin);\r\n  }\r\n}\r\n",
                    "styleUrl": "./login.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 10,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<div class=\"content_width_wrapper small\">\n  <mat-card>\n    <mat-card-header>\n      <mat-card-title>Login</mat-card-title>\n      <mat-card-subtitle>Sign in to your account</mat-card-subtitle>\n    </mat-card-header>\n    <mat-card-content>\n      <form (ngSubmit)=\"onSubmit()\" [formGroup]=\"loginForm\" class=\"login-form\">\n        <mat-form-field appearance=\"outline\" class=\"full-width-form-input\">\n          <mat-label>Email</mat-label>\n          <input [formControl]=\"loginForm.controls.email\" matInput type=\"email\"> <!--placeholder=\"pat@example.com\"-->\n          <mat-error\n            *ngIf=\"loginForm.controls.email.hasError('email') && !loginForm.controls.email.hasError('required')\">\n            Please enter a valid email address\n          </mat-error>\n          <mat-error *ngIf=\"loginForm.controls.email.hasError('required')\">\n            Email is <strong>required</strong>\n          </mat-error>\n        </mat-form-field>\n        <mat-form-field appearance=\"outline\" class=\"full-width-form-input\">\n          <mat-label>Password</mat-label>\n          <input [formControl]=\"loginForm.controls.password\" matInput name=\"password\" type=\"password\">\n          <mat-error *ngIf=\"loginForm.controls.password.hasError('required')\">\n            Password is <strong>required</strong>\n          </mat-error>\n        </mat-form-field>\n        <div class=\"spreaded_buttons\">\n          <button [disabled]=\"!loginForm.valid\" color=\"primary\" mat-raised-button type=\"submit\">Login</button>\n          <div>\n            <a mat-button routerLink=\"/login\">Forgot Password</a>\n            |\n            <a mat-button routerLink=\"/register\">Create Account</a>\n          </div>\n        </div>\n      </form>\n    </mat-card-content>\n  </mat-card>\n</div>\n"
        },
        {
            "name": "MatAccordionResponsiveComponent",
            "id": "component-MatAccordionResponsiveComponent-9d1892188280eed64a52f08add39deb27acc973c1f9a9ff83a69c346c562254db37db54b8fadbbab727d9094b0eff5756a73b284f0b789ecb88dd1610efc0a9d",
            "file": "src/app/ui-components/mat-accordion-responsive/mat-accordion-responsive.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "mat-accordion-responsive",
            "styleUrls": [
                "./mat-accordion-responsive.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./mat-accordion-responsive.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component, ViewEncapsulation} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'mat-accordion-responsive',\r\n  templateUrl: './mat-accordion-responsive.component.html',\r\n  styleUrls: ['./mat-accordion-responsive.component.css'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\n\r\nexport class MatAccordionResponsiveComponent {\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "mat-accordion-responsive mat-expansion-panel-header.mat-expansion-panel-header,\r\nmat-accordion-responsive mat-expansion-panel-header.mat-expansion-panel-header.mat-expanded {\r\n  height: auto;\r\n}\r\n\r\nmat-accordion-responsive .mat-expansion-panel-header-content {\r\n  display: flex;\r\n  flex-direction: row;\r\n  width: 100%;\r\n  margin: var(--min-content-wrap-margin) 0;\r\n  transition: margin 225ms cubic-bezier(0.4, 0, 0.2, 1);\r\n}\r\n\r\nmat-accordion-responsive .mat-expanded .mat-expansion-panel-header-content {\r\n  margin: calc(var(--min-content-wrap-margin) * 1.5) 0;\r\n}\r\n\r\nmat-accordion-responsive mat-panel-title > *,\r\nmat-accordion-responsive mat-panel-description > * {\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  min-width: 0;\r\n}\r\n\r\nmat-accordion-responsive mat-panel-title,\r\nmat-accordion-responsive mat-panel-description {\r\n  overflow: hidden;\r\n}\r\n\r\nmat-accordion-responsive .mat-mdc-form-field-infix {\r\n  width: 120px;\r\n}\r\n\r\nmat-accordion-responsive .mat-mdc-form-field-icon-suffix {\r\n  text-align: right;\r\n}\r\n\r\n\r\n\r\n@media (max-width: 599.98px) {\r\n  mat-accordion-responsive .mat-expansion-panel-header-content {\r\n    flex-direction: column;\r\n  }\r\n\r\n  mat-accordion-responsive mat-panel-title.mat-expansion-panel-header-title,\r\n  mat-accordion-responsive mat-panel-description.mat-expansion-panel-header-description {\r\n    flex-basis: initial;\r\n  }\r\n}\r\n",
                    "styleUrl": "./mat-accordion-responsive.component.css"
                }
            ],
            "stylesData": "",
            "templateData": "<mat-accordion>\r\n  <ng-content></ng-content>\r\n</mat-accordion>\r\n"
        },
        {
            "name": "MatSqButtonComponent",
            "id": "component-MatSqButtonComponent-9789a0903be71eadd3a5d5794855c7d3039965cfbb30a26a8b4324da7c71ad47b72a79bf7f90936153c9b357be3573c732bdc9369bd36a45ef558365176db7d9",
            "file": "src/app/ui-components/mat-sq-button/mat-sq-button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "mat-sq-button",
            "styleUrls": [
                "./mat-sq-button.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./mat-sq-button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "help_topic",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "string | undefined",
                    "decorators": []
                },
                {
                    "name": "icon",
                    "defaultValue": "faCircleQuestion",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "IconDefinition",
                    "decorators": []
                },
                {
                    "name": "popup",
                    "defaultValue": "HelpComponent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "literal type",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "dialog",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatDialog",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "faAngleRight",
                    "defaultValue": "faAngleRight",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 12
                }
            ],
            "methodsClass": [
                {
                    "name": "onClickHandler",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component, Input} from '@angular/core';\r\nimport {faAngleRight, faCircleQuestion, IconDefinition} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {MatDialog} from \"@angular/material/dialog\";\r\nimport {HelpComponent} from \"../../modals/help/help.component\";\r\n\r\n@Component({\r\n  selector: 'mat-sq-button',\r\n  templateUrl: './mat-sq-button.component.html',\r\n  styleUrls: ['./mat-sq-button.component.css']\r\n})\r\nexport class MatSqButtonComponent {\r\n  faAngleRight = faAngleRight;\r\n\r\n  @Input() icon: IconDefinition = faCircleQuestion;\r\n  @Input() help_topic: string | undefined;\r\n  @Input() disabled: boolean = false;\r\n\r\n\r\n  // reference any class decorated with @Component, that will be opened in a popup\r\n  @Input() popup: { new(...args: any[]): any; } = HelpComponent;\r\n\r\n  constructor(public dialog: MatDialog) {\r\n  }\r\n\r\n  onClickHandler() {\r\n    if(this.help_topic === undefined && this.popup == HelpComponent){\r\n      console.log(\"Nothing happened, either define help_topic or popup.\")\r\n    }else{\r\n      const dialogRef = this.dialog.open(this.popup, {\r\n        data: this.help_topic\r\n      });\r\n\r\n      dialogRef.afterClosed().subscribe(result => {\r\n        console.log(`Dialog result: ${result}`);\r\n      });\r\n    }\r\n\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "\r\nbutton[mat-stroked-button], .wrapper {\r\n  height: 6rem;\r\n  width: 6rem;\r\n}\r\n\r\nbutton[mat-stroked-button] {\r\n  padding: 0;\r\n}\r\n\r\nbutton[mat-stroked-button] .wrapper{\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  box-sizing: border-box;\r\n  padding: 10px;\r\n}\r\ndiv {\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  align-items: flex-end;\r\n}\r\n\r\n.main_icon {\r\n  display: block;\r\n  font-size: 2rem;\r\n  margin-top: 0.3rem;\r\n}\r\n.caret_icon {\r\n  display: inline-block;\r\n  font-size: 1.1rem;\r\n}\r\n\r\n.label {\r\n  text-align: left;\r\n  line-height: 1;\r\n  white-space: initial;\r\n}\r\n",
                    "styleUrl": "./mat-sq-button.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "dialog",
                        "type": "MatDialog",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 20,
                "jsdoctags": [
                    {
                        "name": "dialog",
                        "type": "MatDialog",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<button mat-stroked-button (click)=\"onClickHandler()\" [disabled]=\"disabled\">\r\n  <span class=\"wrapper\">\r\n    <fa-icon [icon]=\"icon\" class=\"main_icon\"></fa-icon>\r\n    <div>\r\n      <span class=\"label\"><ng-content></ng-content></span>\r\n      <fa-icon [icon]=\"faAngleRight\" class=\"caret_icon\"></fa-icon>\r\n    </div>\r\n  </span>\r\n</button>\r\n"
        },
        {
            "name": "MediacontrolComponent",
            "id": "component-MediacontrolComponent-6f9012c4074b425ea28528467568590395071a6f4bf3a4279dcfc232a275c781346a63cefb77cf164b44911c8fc9e50cb9c80214bee6fe7e3912b914581ba82b",
            "file": "src/app/modals/mediacontrol/mediacontrol.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-mediacontrol",
            "styleUrls": [
                "./mediacontrol.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./mediacontrol.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "musicIsFav",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean | undefined",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "musicIsPaused",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean | undefined",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "musicProgress",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number | undefined",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "_destroy",
                    "defaultValue": "new Subject<void>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseComponent"
                    }
                },
                {
                    "name": "destroy$",
                    "defaultValue": "this._destroy as Observable<void>",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "BaseComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "close",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "formatDuration",
                    "args": [
                        {
                            "name": "percentComplete",
                            "type": "number | undefined",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "maxDurationInSeconds",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 68,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "percentComplete",
                            "type": "number | undefined",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "maxDurationInSeconds",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "nextSong",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 60,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "prevSong",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 64,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "setMusicProgress",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "toggleMusicFav",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "toggleMusicPause",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nLifecycle hook called by angular framework when extended class dies.",
                    "description": "<p>Lifecycle hook called by angular framework when extended class dies.</p>\n",
                    "inheritance": {
                        "file": "BaseComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {MatBottomSheetRef} from \"@angular/material/bottom-sheet\";\nimport {BaseComponent} from \"../../helpers/base/base.component\";\nimport {DataService} from \"../../services/data.service\";\nimport {TimerService} from \"../../services/timer.service\";\n\n@Component({\n  selector: 'app-mediacontrol',\n  templateUrl: './mediacontrol.component.html',\n  styleUrls: ['./mediacontrol.component.css']\n})\nexport class MediacontrolComponent extends BaseComponent implements OnInit, OnDestroy {\n  musicProgress: number | undefined;\n  musicIsPaused: boolean | undefined;\n  musicIsFav: boolean | undefined;\n\n\n  constructor(private _bottomSheetRef: MatBottomSheetRef<MediacontrolComponent>, private data: DataService, private timer: TimerService) {\n    super()\n  }\n\n  // openLink(event: MouseEvent): void {\n  //   this._bottomSheetRef.dismiss();\n  //   event.preventDefault();\n  // }\n\n  close() {\n    this._bottomSheetRef.dismiss();\n  }\n\n  ngOnInit() {\n    this.data.currentMusicProgress.dieWith(this).subscribe(d => this.musicProgress = d);\n    this.data.currentMusicIsPaused.dieWith(this).subscribe(d => this.musicIsPaused = d);\n    this.data.currentMusicIsFav.dieWith(this).subscribe(d => this.musicIsFav = d);\n  }\n\n  setMusicProgress() {\n    if (this.musicProgress !== undefined) {\n      this.data.changeMusicProgress(this.musicProgress)\n    }\n  }\n\n  toggleMusicPause() {\n    if (this.musicIsPaused !== undefined) {\n      if (!this.musicIsPaused) {\n        this.timer.pauseTimer();\n      }else{\n        this.timer.startTimer();\n      }\n      this.data.changeMusicIsPaused(!this.musicIsPaused)\n    }\n  }\n\n  toggleMusicFav() {\n    if (this.musicIsFav !== undefined) {\n      this.data.changeMusicIsFav(!this.musicIsFav)\n    }\n  }\n\n  nextSong(){\n    this.prevSong()\n  }\n\n  prevSong() {\n    this.data.changeMusicProgress(0)\n  }\n\n  formatDuration(percentComplete: number | undefined, maxDurationInSeconds: number): string {\n    if (percentComplete !== undefined) {\n      const totalSecondsRemaining = maxDurationInSeconds * (percentComplete / 100);\n      const minutes = Math.floor(totalSecondsRemaining / 60);\n      const seconds = Math.floor(totalSecondsRemaining % 60);\n      return `${minutes.toString().padStart(1, '0')}:${seconds.toString().padStart(2, '0')}`;\n    } else {\n      return \"~?~\";\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host {\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n.media-control-vertical-wrapper {\r\n  display: flex;\r\n  flex-direction: column;\r\n  flex-grow: 1;\r\n  justify-content: space-between;\r\n  margin: 0 auto;\r\n  width: 100%;\r\n  max-width: min(300px, calc(100% - 2 * var(--min-content-wrap-margin)));\r\n  padding-bottom: var(--min-content-wrap-margin);\r\n}\r\n.example-spacer {\r\n  flex: 1 1 auto;\r\n}\r\n::ng-deep mat-bottom-sheet-container.mat-bottom-sheet-container {\r\n  padding: 0;\r\n  width: calc(332px + var(--min-content-wrap-margin) * 4);\r\n  min-width: auto;\r\n  max-height: 640px;\r\n  height: 100vh;\r\n}\r\n.cover-image-wrapper {\r\n  flex-grow: 1;\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n.cover-image {\r\n  display: block;\r\n  width: 100%;\r\n  height: 100%;\r\n  object-fit: contain;\r\n/*  TODO: allow seamless vertical sizing down */\r\n}\r\n.title {\r\n  padding-left: var(--min-content-wrap-margin);\r\n}\r\n.title-wrapper {\r\n  display: flex;\r\n}\r\n.title-wrapper div {\r\n  flex-grow: 1;\r\n}\r\n.title-wrapper button {\r\n  flex-grow: 0;\r\n}\r\n.media-controls {\r\n  max-width: min(100%, 300px);\r\n  width: 100%;\r\n}\r\n.progress-bar-wrapper, .media-control-buttons {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: var(--min-content-wrap-margin) / 4;\r\n  justify-content: space-between;\r\n}\r\n.media-control-buttons.shrinked {\r\n  justify-content: space-evenly;\r\n\r\n}\r\nmat-slider{\r\n  flex-grow: 1;\r\n}\r\n.progress-bar-wrapper div {\r\n  flex-grow: 0;\r\n  width: 35px;\r\n}\r\n.progress-bar-wrapper div:last-of-type {\r\n  text-align: right;\r\n}\r\n.primary mat-icon {\r\n  font-size: 50px;\r\n  height: 50px ;\r\n  width: 50px;\r\n}\r\n[mat-icon-button].primary {\r\n  height: 74px ;\r\n  width: 74px;\r\n}\r\n.media-device {\r\n  margin-left: -12px;\r\n  color: #673ab7; /*TODO: Variable*/\r\n}\r\n.media-device mat-icon {\r\n  flex-grow: 0;\r\n  font-size: 20px;\r\n  height: 20px;\r\n  overflow: visible;\r\n}\r\n\r\n.media-device span {\r\n  font-size: 0.78em;\r\n  font-weight: bold;\r\n  white-space: nowrap;\r\n}\r\n\r\n.share-button {\r\n  margin-right: -12px;\r\n}\r\n\r\n@media(max-height: 600px){\r\n  .cover-image {\r\n    max-height: 200px;\r\n  }\r\n}\r\n@media(max-height: 500px){\r\n  .cover-image {\r\n    max-height: 150px;\r\n  }\r\n}\r\n@media(max-height: 450px){\r\n  .cover-image {\r\n    max-height: 100px;\r\n  }\r\n}\r\n@media(max-width: 400px) and (max-height: 800px){\r\n  ::ng-deep mat-bottom-sheet-container.mat-bottom-sheet-container {\r\n    max-height: 100vh;\r\n  }\r\n}\r\n",
                    "styleUrl": "./mediacontrol.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_bottomSheetRef",
                        "type": "MatBottomSheetRef<MediacontrolComponent>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "data",
                        "type": "DataService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "timer",
                        "type": "TimerService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 15,
                "jsdoctags": [
                    {
                        "name": "_bottomSheetRef",
                        "type": "MatBottomSheetRef<MediacontrolComponent>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "data",
                        "type": "DataService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "timer",
                        "type": "TimerService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": "BaseComponent",
            "implements": [
                "OnInit",
                "OnDestroy"
            ],
            "templateData": "<mat-toolbar>\n  <mat-icon>music_note</mat-icon>\n  <span class=\"title\">Now Playing</span>\n  <span class=\"example-spacer\"></span>\n  <button aria-label=\"Example icon to open context menu\" class=\"example-icon\" mat-icon-button [matMenuTriggerFor]=\"menu\">\n    <mat-icon>more_vert</mat-icon>\n  </button>\n  <mat-menu #menu=\"matMenu\">\n    <button mat-menu-item>\n      <mat-icon>open_in_new</mat-icon>\n      <span>Open in Spotify</span>\n    </button>\n    <button mat-menu-item disabled>\n      <mat-icon>queue_music</mat-icon>\n      <span>Show Playlist</span>\n    </button>\n    <button mat-menu-item>\n      <mat-icon>shuffle</mat-icon>\n      <span>Shuffle</span>\n    </button>\n  </mat-menu>\n\n  <button (click)=\"close()\" aria-label=\"Button to close media controls\" class=\"example-icon\" mat-icon-button>\n    <mat-icon>close</mat-icon>\n  </button>\n</mat-toolbar>\n<div class=\"media-control-vertical-wrapper\">\n  <div class=\"cover-image-wrapper\">\n    <img alt=\"Photo of a album cover\" class=\"cover-image\" ngSrc=\"../../../assets/albumcover.jpg\" height=\"300\" width=\"300\">\n  </div>\n  <div class=\"media-controls\">\n    <div class=\"title-wrapper\">\n      <div>\n        <mat-card-title>Hold Me Like a Grudge</mat-card-title>\n        <mat-card-subtitle>Fall Out Boy</mat-card-subtitle>\n      </div>\n      <button aria-label=\"Example icon-button with heart icon\" class=\"example-icon\" mat-icon-button (click)=\"toggleMusicFav()\">\n        <mat-icon>{{musicIsFav ? \"favorite\": \"favorite_border\"}}</mat-icon>\n      </button>\n    </div>\n    <div class=\"progress-bar-wrapper\">\n      <div>{{formatDuration(musicProgress, 3 * 60 + 35)}}</div>\n      <mat-slider>\n        <input [(ngModel)]=\"musicProgress\"  (ngModelChange)=\"setMusicProgress()\" matSliderThumb>\n      </mat-slider>\n      <div>3:35</div>\n    </div>\n    <div class=\"media-control-buttons shrinked\">\n      <button aria-label=\"Example icon-button with menu icon\" mat-icon-button (click)=\"prevSong()\">\n        <mat-icon>skip_previous</mat-icon>\n      </button>\n      <button aria-label=\"Example icon-button with menu icon\" class=\"primary\" mat-icon-button (click)=\"toggleMusicPause()\">\n        <mat-icon>{{musicIsPaused ? \"play_circle_filled\": \"pause_circle_filled\"}}</mat-icon>\n      </button>\n      <button aria-label=\"Example icon-button with menu icon\" mat-icon-button (click)=\"nextSong()\">\n        <mat-icon>skip_next</mat-icon>\n      </button>\n    </div>\n    <div class=\"media-control-buttons\">\n      <button mat-button class=\"media-device\">\n        <mat-icon>speaker</mat-icon>\n        <span>GYMBOX-SPEAKER</span>\n      </button>\n      <button aria-label=\"Example icon-button with share icon\" class=\"example-icon\" mat-icon-button class=\"share-button\">\n        <mat-icon>share</mat-icon>\n      </button>\n    </div>\n  </div>\n</div>\n\n<!--<p>mediacontrol works!</p>-->\n<!--<mat-nav-list>-->\n<!--  <a href=\"https://keep.google.com/\" mat-list-item (click)=\"openLink($event)\">-->\n<!--    <span matListItemTitle>Google Keep</span>-->\n<!--    <span matLine>Add to a note</span>-->\n<!--  </a>-->\n\n<!--  <a href=\"https://docs.google.com/\" mat-list-item (click)=\"openLink($event)\">-->\n<!--    <span matListItemTitle>Google Docs</span>-->\n<!--    <span matLine>Embed in a document</span>-->\n<!--  </a>-->\n\n<!--  <a href=\"https://plus.google.com/\" mat-list-item (click)=\"openLink($event)\">-->\n<!--    <span matListItemTitle>Google Plus</span>-->\n<!--    <span matLine>Share with your friends</span>-->\n<!--  </a>-->\n\n<!--  <a href=\"https://hangouts.google.com/\" mat-list-item (click)=\"openLink($event)\">-->\n<!--    <span matListItemTitle>Google Hangouts</span>-->\n<!--    <span matLine>Show to your coworkers</span>-->\n<!--  </a>-->\n<!--</mat-nav-list>-->\n"
        },
        {
            "name": "PageComponent",
            "id": "component-PageComponent-1fc7c24c98b4f0b0f413d91f5a6126f11ad55647457f5a7f372b7f83fe8ecd6dbe67b5ca4b826ed20b9bfbc04d5606b15f82a203b1311f98b18bd28ec9f4fc7c",
            "file": "src/stories/page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-page",
            "styleUrls": [
                "./page.css"
            ],
            "styles": [],
            "template": "<article>    <storybook-header\n      [user]=\"user\"\n      (onLogout)=\"doLogout()\"\n      (onLogin)=\"doLogin()\"\n      (onCreateAccount)=\"doCreateAccount()\"\n    ></storybook-header>\n    <section>\n      <h2>Pages in Storybook</h2>\n      <p>\n        We recommend building UIs with a\n        <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <strong>component-driven</strong>\n        </a>\n        process starting with atomic components and ending with pages.\n      </p>\n      <p>\n        Render pages with mock data. This makes it easy to build and review page states without\n        needing to navigate to them in your app. Here are some handy patterns for managing page data\n        in Storybook:\n      </p>\n      <ul>\n        <li>\n          Use a higher-level connected component. Storybook helps you compose such data from the\n          \"args\" of child component stories\n        </li>\n        <li>\n          Assemble data in the page component from your services. You can mock these services out\n          using Storybook.\n        </li>\n      </ul>\n      <p>\n        Get a guided tutorial on component-driven development at\n        <a href=\"https://storybook.js.org/tutorials/\" target=\"_blank\" rel=\"noopener noreferrer\">\n          Storybook tutorials\n        </a>\n        . Read more in the\n        <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\"> docs </a>\n        .\n      </p>\n      <div class=\"tip-wrapper\">\n        <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n        <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n              id=\"a\"\n              fill=\"#999\"\n            />\n          </g>\n        </svg>\n        Viewports addon in the toolbar\n      </div>\n    </section>\n  </article>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "User | null",
                    "optional": false,
                    "description": "",
                    "line": 64
                }
            ],
            "methodsClass": [
                {
                    "name": "doCreateAccount",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 74,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "doLogin",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 70,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "doLogout",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 66,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { User } from './User';\r\n\r\n@Component({\r\n  selector: 'storybook-page',\r\n  template: `<article>\r\n    <storybook-header\r\n      [user]=\"user\"\r\n      (onLogout)=\"doLogout()\"\r\n      (onLogin)=\"doLogin()\"\r\n      (onCreateAccount)=\"doCreateAccount()\"\r\n    ></storybook-header>\r\n    <section>\r\n      <h2>Pages in Storybook</h2>\r\n      <p>\r\n        We recommend building UIs with a\r\n        <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n          <strong>component-driven</strong>\r\n        </a>\r\n        process starting with atomic components and ending with pages.\r\n      </p>\r\n      <p>\r\n        Render pages with mock data. This makes it easy to build and review page states without\r\n        needing to navigate to them in your app. Here are some handy patterns for managing page data\r\n        in Storybook:\r\n      </p>\r\n      <ul>\r\n        <li>\r\n          Use a higher-level connected component. Storybook helps you compose such data from the\r\n          \"args\" of child component stories\r\n        </li>\r\n        <li>\r\n          Assemble data in the page component from your services. You can mock these services out\r\n          using Storybook.\r\n        </li>\r\n      </ul>\r\n      <p>\r\n        Get a guided tutorial on component-driven development at\r\n        <a href=\"https://storybook.js.org/tutorials/\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n          Storybook tutorials\r\n        </a>\r\n        . Read more in the\r\n        <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\"> docs </a>\r\n        .\r\n      </p>\r\n      <div class=\"tip-wrapper\">\r\n        <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\r\n        <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\r\n          <g fill=\"none\" fillRule=\"evenodd\">\r\n            <path\r\n              d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\r\n              id=\"a\"\r\n              fill=\"#999\"\r\n            />\r\n          </g>\r\n        </svg>\r\n        Viewports addon in the toolbar\r\n      </div>\r\n    </section>\r\n  </article>`,\r\n  styleUrls: ['./page.css'],\r\n})\r\nexport default class PageComponent {\r\n  user: User | null = null;\r\n\r\n  doLogout() {\r\n    this.user = null;\r\n  }\r\n\r\n  doLogin() {\r\n    this.user = { name: 'Jane Doe' };\r\n  }\r\n\r\n  doCreateAccount() {\r\n    this.user = { name: 'Jane Doe' };\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "section {\r\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\r\n  font-size: 14px;\r\n  line-height: 24px;\r\n  padding: 48px 20px;\r\n  margin: 0 auto;\r\n  max-width: 600px;\r\n  color: #333;\r\n}\r\n\r\nsection h2 {\r\n  font-weight: 900;\r\n  font-size: 32px;\r\n  line-height: 1;\r\n  margin: 0 0 4px;\r\n  display: inline-block;\r\n  vertical-align: top;\r\n}\r\n\r\nsection p {\r\n  margin: 1em 0;\r\n}\r\n\r\nsection a {\r\n  text-decoration: none;\r\n  color: #1ea7fd;\r\n}\r\n\r\nsection ul {\r\n  padding-left: 30px;\r\n  margin: 1em 0;\r\n}\r\n\r\nsection li {\r\n  margin-bottom: 8px;\r\n}\r\n\r\nsection .tip {\r\n  display: inline-block;\r\n  border-radius: 1em;\r\n  font-size: 11px;\r\n  line-height: 12px;\r\n  font-weight: 700;\r\n  background: #e7fdd8;\r\n  color: #66bf3c;\r\n  padding: 4px 12px;\r\n  margin-right: 10px;\r\n  vertical-align: top;\r\n}\r\n\r\nsection .tip-wrapper {\r\n  font-size: 13px;\r\n  line-height: 20px;\r\n  margin-top: 40px;\r\n  margin-bottom: 40px;\r\n}\r\n\r\nsection .tip-wrapper svg {\r\n  display: inline-block;\r\n  height: 12px;\r\n  width: 12px;\r\n  margin-right: 4px;\r\n  vertical-align: top;\r\n  margin-top: 3px;\r\n}\r\n\r\nsection .tip-wrapper svg path {\r\n  fill: #1ea7fd;\r\n}\r\n",
                    "styleUrl": "./page.css"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "PageNotFoundComponent",
            "id": "component-PageNotFoundComponent-f32a6b0b7744285f368448258c7645792ce220515617531e71e75a17f6a3d6faf2f17b4092650e43108bb1ddbf1fe965e362e5ac2058c62d971b7e6479a5ad8e",
            "file": "src/app/pages/page-not-found/page-not-found.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-page-not-found",
            "styleUrls": [
                "./page-not-found.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./page-not-found.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.css']\n})\nexport class PageNotFoundComponent {\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./page-not-found.component.css"
                }
            ],
            "stylesData": "",
            "templateData": "<p>404 - this page could not be found!</p>\n"
        },
        {
            "name": "RegisterComponent",
            "id": "component-RegisterComponent-dd6c07a3b4604f8599efaaaf088bd1b8c17a0d8b85f6e20d0a1318914965e94efa9dca2ae925f92a1314d05b8ec288e4bdf6f437350da4db7245cbe76aca55d2",
            "file": "src/app/pages/register/register.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-register",
            "styleUrls": [
                "./register.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./register.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "registerForm",
                    "defaultValue": "new FormGroup({\n    email: new FormControl('', [Validators.required, Validators.email]),\n    password: new FormControl('', Validators.required),\n    confirmPassword: new FormControl('', Validators.required)\n  },\n    [CustomValidators.MatchValidator('password', 'confirmPassword')]\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "router",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Router",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "onSubmit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport {FormControl, FormGroup, Validators} from \"@angular/forms\";\nimport {Router} from \"@angular/router\";\nimport {CustomValidators} from \"../../helpers/CustomValidators\";\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent {\n  constructor(public router: Router){}\n\n  registerForm = new FormGroup({\n    email: new FormControl('', [Validators.required, Validators.email]),\n    password: new FormControl('', Validators.required),\n    confirmPassword: new FormControl('', Validators.required)\n  },\n    [CustomValidators.MatchValidator('password', 'confirmPassword')]\n  );\n\n  onSubmit(): void {\n    if (this.registerForm.valid) {\n      this.router.navigate(['home']);\n    }\n\n  }\n}\n\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".full-width-form-input {\r\n  width: 100%;\r\n  margin-top: calc(var(--min-content-wrap-margin) / 2);\r\n}\r\n.login-form {\r\n  margin: var(--min-content-wrap-margin),\r\n}\r\n.spreaded_buttons {\r\n  margin-top: calc(var(--min-content-wrap-margin) / 2);\r\n  display: flex;\r\n  flex-direction: row-reverse;\r\n  justify-content: space-between;\r\n}\r\n@media(max-width: 599.98px) {\r\n  .spreaded_buttons {\r\n    flex-direction: column;\r\n    gap: var(--min-content-wrap-margin);\r\n  }\r\n}\r\n",
                    "styleUrl": "./register.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<div class=\"content_width_wrapper small\">\n  <mat-card>\n    <mat-card-header>\n      <mat-card-title>Register</mat-card-title>\n      <mat-card-subtitle>Create a new account</mat-card-subtitle>\n    </mat-card-header>\n    <mat-card-content>\n      <form class=\"login-form\" [formGroup]=\"registerForm\" (ngSubmit)=\"onSubmit()\"  >\n\n        <mat-form-field class=\"full-width-form-input\" appearance=\"outline\">\n          <mat-label>Email</mat-label>\n          <input type=\"email\" matInput [formControl]=\"registerForm.controls.email\"> <!--placeholder=\"pat@example.com\"-->\n          <mat-error *ngIf=\"registerForm.controls.email.hasError('email') && !registerForm.controls.email.hasError('required')\">\n            Please enter a valid email address\n          </mat-error>\n          <mat-error *ngIf=\"registerForm.controls.email.hasError('required')\">\n            Email is <strong>required</strong>\n          </mat-error>\n        </mat-form-field>\n\n        <mat-form-field class=\"full-width-form-input\" appearance=\"outline\">\n          <mat-label>Password</mat-label>\n          <input  matInput  [formControl]=\"registerForm.controls.password\" name=\"password\" type=\"password\">\n          <mat-error *ngIf=\"registerForm.controls.password.hasError('required')\">\n            Password is <strong>required</strong>\n          </mat-error>\n        </mat-form-field>\n\n        <mat-form-field class=\"full-width-form-input\" appearance=\"outline\">\n          <mat-label>Confirm Password</mat-label>\n          <input  matInput  [formControl]=\"registerForm.controls.confirmPassword\" name=\"password\" type=\"password\">\n<!--          <mat-error *ngIf=\"registerForm.controls.confirmPassword.hasError('required')\">-->\n<!--            Confirm Password is <strong>required</strong>-->\n<!--          </mat-error>-->\n          <mat-error *ngIf=\"registerForm.hasError('mismatch')\">\n            Passwords <strong>do not match</strong>\n          </mat-error>\n        </mat-form-field>\n\n        <div class=\"spreaded_buttons\">\n          <button color=\"primary\" mat-raised-button  type=\"submit\" [disabled]=\"!registerForm.valid\">Register</button>\n          <div>\n            <a mat-button routerLink=\"/login\">Login to existing Account</a>\n          </div>\n        </div>\n      </form>\n    </mat-card-content>\n  </mat-card>\n</div>\n"
        },
        {
            "name": "RoomComponent",
            "id": "component-RoomComponent-d5249ee3c3a98e6e3c03a8b5b21a01542f3c700707bcb5bd1e2788de2612662cd4fd4543ae92991d6e39211060dd9dc0d307a2cc1ca57493244328821ea02498",
            "file": "src/app/pages/room/room.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-room",
            "styleUrls": [
                "./room.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./room.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "BlindsHelpComponent",
                    "defaultValue": "BlindsHelpComponent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 51
                },
                {
                    "name": "ClimateHelpComponent",
                    "defaultValue": "ClimateHelpComponent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 52
                },
                {
                    "name": "DoorHelpComponent",
                    "defaultValue": "DoorHelpComponent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 53
                },
                {
                    "name": "event",
                    "defaultValue": "event",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 93,
                    "modifierKind": [
                        122,
                        144
                    ]
                },
                {
                    "name": "faAngleRight",
                    "defaultValue": "faAngleRight",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 41
                },
                {
                    "name": "faBottleDroplet",
                    "defaultValue": "faBottleDroplet",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 94,
                    "modifierKind": [
                        122,
                        144
                    ]
                },
                {
                    "name": "faBottleWater",
                    "defaultValue": "faBottleWater",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 49
                },
                {
                    "name": "faClock",
                    "defaultValue": "faClock",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 36
                },
                {
                    "name": "faDoorOpen",
                    "defaultValue": "faDoorOpen",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 40
                },
                {
                    "name": "faDumbbell",
                    "defaultValue": "faDumbbell",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 42
                },
                {
                    "name": "faFan",
                    "defaultValue": "faFan",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 48
                },
                {
                    "name": "faHotTubPerson",
                    "defaultValue": "faHotTubPerson",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 47
                },
                {
                    "name": "faLightbulb",
                    "defaultValue": "faLightbulb",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 38
                },
                {
                    "name": "faLocationPin",
                    "defaultValue": "faLocationPin",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 35
                },
                {
                    "name": "faPersonBiking",
                    "defaultValue": "faPersonBiking",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 44
                },
                {
                    "name": "faPersonBooth",
                    "defaultValue": "faPersonBooth",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 39
                },
                {
                    "name": "faPumpSoap",
                    "defaultValue": "faPumpSoap",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 96,
                    "modifierKind": [
                        122,
                        144
                    ]
                },
                {
                    "name": "faRing",
                    "defaultValue": "faRing",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 100,
                    "modifierKind": [
                        122,
                        144
                    ]
                },
                {
                    "name": "faSheetPlastic",
                    "defaultValue": "faSheetPlastic",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 45
                },
                {
                    "name": "faShower",
                    "defaultValue": "faShower",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 46
                },
                {
                    "name": "faSoap",
                    "defaultValue": "faSoap",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 95,
                    "modifierKind": [
                        122,
                        144
                    ]
                },
                {
                    "name": "faTarp",
                    "defaultValue": "faTarp",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 99,
                    "modifierKind": [
                        122,
                        144
                    ]
                },
                {
                    "name": "faUser",
                    "defaultValue": "faUser",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 37
                },
                {
                    "name": "faVault",
                    "defaultValue": "faVault",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 98,
                    "modifierKind": [
                        122,
                        144
                    ]
                },
                {
                    "name": "faWeightHanging",
                    "defaultValue": "faWeightHanging",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 43
                },
                {
                    "name": "faWheatAwn",
                    "defaultValue": "faWheatAwn",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 97,
                    "modifierKind": [
                        122,
                        144
                    ]
                },
                {
                    "name": "LightsHelpComponent",
                    "defaultValue": "LightsHelpComponent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 50
                },
                {
                    "name": "musicIsFav",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean | undefined",
                    "optional": false,
                    "description": "",
                    "line": 56
                },
                {
                    "name": "musicIsPaused",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean | undefined",
                    "optional": false,
                    "description": "",
                    "line": 55
                },
                {
                    "name": "musicProgress",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number | undefined",
                    "optional": false,
                    "description": "",
                    "line": 54
                },
                {
                    "name": "_destroy",
                    "defaultValue": "new Subject<void>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseComponent"
                    }
                },
                {
                    "name": "destroy$",
                    "defaultValue": "this._destroy as Observable<void>",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "BaseComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 65,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "openBottomSheet",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 61,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "toggleMusicFav",
                    "args": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 87,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "toggleMusicPause",
                    "args": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 76,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "toggleWorkoutTools",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 72,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nLifecycle hook called by angular framework when extended class dies.",
                    "description": "<p>Lifecycle hook called by angular framework when extended class dies.</p>\n",
                    "inheritance": {
                        "file": "BaseComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {MatBottomSheet} from \"@angular/material/bottom-sheet\";\nimport {\n  faAngleRight, faBottleDroplet,\n  faBottleWater,\n  faClock,\n  faDoorOpen,\n  faDumbbell,\n  faFan,\n  faHotTubPerson,\n  faLightbulb,\n  faLocationPin,\n  faPersonBiking,\n  faPersonBooth, faPumpSoap, faRing,\n  faSheetPlastic,\n  faShower, faSoap, faTarp,\n  faUser, faVault,\n  faWeightHanging, faWheatAwn\n} from '@fortawesome/free-solid-svg-icons';\nimport {Subscription} from \"rxjs\";\nimport {BaseComponent} from \"../../helpers/base/base.component\";\nimport {LightsHelpComponent} from \"../../modals/help/lights/lights-help.component\";\nimport {BlindsHelpComponent} from \"../../modals/help/blinds-help/blinds-help.component\";\nimport {ClimateHelpComponent} from \"../../modals/help/climate-help/climate-help.component\";\nimport {DoorHelpComponent} from \"../../modals/help/door-help/door-help.component\";\nimport {MediacontrolComponent} from \"../../modals/mediacontrol/mediacontrol.component\";\nimport {DataService} from \"../../services/data.service\";\nimport {TimerService} from \"../../services/timer.service\";\n@Component({\n  selector: 'app-room',\n  templateUrl: './room.component.html',\n  styleUrls: ['./room.component.css']\n})\nexport class RoomComponent extends BaseComponent implements OnInit, OnDestroy {\n  faLocationPin = faLocationPin;\n  faClock = faClock;\n  faUser = faUser;\n  faLightbulb = faLightbulb;\n  faPersonBooth = faPersonBooth;\n  faDoorOpen = faDoorOpen;\n  faAngleRight = faAngleRight;\n  faDumbbell = faDumbbell;\n  faWeightHanging = faWeightHanging;\n  faPersonBiking = faPersonBiking;\n  faSheetPlastic = faSheetPlastic;\n  faShower = faShower;\n  faHotTubPerson = faHotTubPerson;\n  faFan = faFan;\n  faBottleWater = faBottleWater;\n  LightsHelpComponent = LightsHelpComponent;\n  BlindsHelpComponent = BlindsHelpComponent;\n  ClimateHelpComponent = ClimateHelpComponent;\n  DoorHelpComponent = DoorHelpComponent;\n  musicProgress: number | undefined;\n  musicIsPaused: boolean | undefined;\n  musicIsFav: boolean | undefined;\n\n  constructor(private _bottomSheet: MatBottomSheet, private data: DataService, private timer: TimerService) {\n    super()\n  }\n  openBottomSheet(): void {\n    this._bottomSheet.open(MediacontrolComponent);\n  }\n\n  ngOnInit() {\n    this.data.currentMusicProgress.dieWith(this).subscribe(d => this.musicProgress = d)\n    this.data.currentMusicIsPaused.dieWith(this).subscribe(d => this.musicIsPaused = d)\n    this.data.currentMusicIsFav.dieWith(this).subscribe(d => this.musicIsFav = d)\n\n  }\n\n  public toggleWorkoutTools() {\n    //TODO: Implement\n  }\n\n  toggleMusicPause(event: MouseEvent) {\n    if (this.musicIsPaused !== undefined) {\n      if (!this.musicIsPaused) {\n        this.timer.pauseTimer();\n      }else{\n        this.timer.startTimer();\n      }\n      this.data.changeMusicIsPaused(!this.musicIsPaused)\n    }\n    event.stopPropagation();\n  }\n  toggleMusicFav(event: MouseEvent) {\n    if (this.musicIsFav !== undefined) {\n      this.data.changeMusicIsFav(!this.musicIsFav)\n    }\n    event.stopPropagation();\n  }\n  protected readonly event = event;\n  protected readonly faBottleDroplet = faBottleDroplet;\n  protected readonly faSoap = faSoap;\n  protected readonly faPumpSoap = faPumpSoap;\n  protected readonly faWheatAwn = faWheatAwn;\n  protected readonly faVault = faVault;\n  protected readonly faTarp = faTarp;\n  protected readonly faRing = faRing;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "\r\n.room-details-card {\r\n  margin-bottom: var(--min-content-wrap-margin);\r\n}\r\n\r\n.row-label {\r\n  font-size: 1rem;\r\n  padding: 0 var(--min-content-wrap-margin) var(--min-content-wrap-margin);\r\n}\r\n\r\n.flat-button-row, .sq-button-row {\r\n  display: block;\r\n  overflow-x: auto;\r\n  overflow-y: hidden;\r\n  white-space: nowrap;\r\n  width: 100%;\r\n  padding-bottom: var(--min-content-wrap-margin);\r\n}\r\n\r\n.flat-button-row button {\r\n  margin: 0 0.2rem;\r\n  display: inline-block;\r\n}\r\n\r\n.flat-button-row button:first-of-type {\r\n  margin-left: var(--min-content-wrap-margin);\r\n}\r\n\r\n.flat-button-row button {\r\n  white-space: nowrap;\r\n}\r\n\r\n.sq-button-row-container {\r\n  margin-bottom: var(--min-content-wrap-margin);\r\n}\r\nmat-sq-button {\r\n  margin-right: var(--min-content-wrap-margin);\r\n\r\n}\r\nmat-sq-button:first-of-type {\r\n  margin-left: var(--min-content-wrap-margin);\r\n}\r\n\r\nmat-card-content {\r\n  margin-top: var(--min-content-wrap-margin);\r\n}\r\n\r\nmat-card-content > mat-divider.divider-with-margin {\r\n  margin-top: var(--min-content-wrap-margin);\r\n  margin-bottom: var(--min-content-wrap-margin);\r\n}\r\n\r\n.media-player-container {\r\n  position: fixed;\r\n  bottom: 70px;\r\n  z-index: 5;\r\n  width: 100%;\r\n  left: 0;\r\n}\r\n\r\n.room-container {\r\n  padding-bottom: calc(70px + var(--min-content-wrap-margin));\r\n}\r\n.media-player-wrapper {\r\n  margin: 0 auto;\r\n  width: calc(100% - 3 * var(--min-content-wrap-margin));\r\n  max-width: var(--max-content-width);\r\n  background: #f5f5f5;\r\n  color: rgba(0,0,0,.87);\r\n  cursor: pointer;\r\n  user-select: none;\r\n  -webkit-user-select: none;\r\n  -moz-user-select: none;\r\n  -webkit-user-drag: none;\r\n  -webkit-tap-highlight-color: transparent;\r\n}\r\n.media-player-row {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  gap: calc(var(--min-content-wrap-margin)/2);\r\n  position: relative;\r\n}\r\n\r\n.media-player-row button {\r\n  flex-shrink: 0;\r\n}\r\n\r\n.media-player-row img {\r\n  height: 36px;\r\n  margin-left: 7px;\r\n  border-radius: 2px;\r\n  width: auto;\r\n}\r\n\r\nmat-progress-bar {\r\n  width: 100%;\r\n}\r\n.title-wrapper {\r\n  flex-grow: 1;\r\n  overflow: hidden;\r\n}\r\n.title-wrapper mat-card-title, .title-wrapper mat-card-subtitle {\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n}\r\n.title-wrapper mat-card-title {\r\n  font-size: 1rem;\r\n  line-height: 1.2rem;\r\n}\r\n.title-wrapper mat-card-subtitle {\r\n  font-size: 0.8rem;\r\n  line-height: 0.9rem;\r\n}\r\n.mat-ripple-dummy {\r\n  position: absolute ;\r\n  top: 0 ;\r\n  bottom: 0 ;\r\n  left: 0 ;\r\n  right: 0 ;\r\n}\r\nbutton[mat-icon-button].small {\r\n  height: 35px;\r\n  width: 35px;\r\n  padding: 6px;\r\n  margin: 5px;\r\n}\r\nbutton[mat-icon-button].small mat-icon {\r\n  font-size: 20px;\r\n  height: 20px;\r\n  width: 20px;\r\n}\r\n",
                    "styleUrl": "./room.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_bottomSheet",
                        "type": "MatBottomSheet",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "data",
                        "type": "DataService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "timer",
                        "type": "TimerService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 56,
                "jsdoctags": [
                    {
                        "name": "_bottomSheet",
                        "type": "MatBottomSheet",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "data",
                        "type": "DataService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "timer",
                        "type": "TimerService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": "BaseComponent",
            "implements": [
                "OnInit",
                "OnDestroy"
            ],
            "templateData": "<div class=\"room-container\">\r\n\r\n  <div class=\"content_width_wrapper\">\r\n    <h1>Current Workout</h1>\r\n    <mat-card class=\"room-details-card\">\r\n      <mat-card-header>\r\n        <mat-card-title>Your Reservation</mat-card-title>\r\n      </mat-card-header>\r\n      <img alt=\"Photo of a Gym\" mat-card-image src=\"https://source.unsplash.com/1000x300/?gym\">\r\n      <mat-card-content>\r\n        <app-icon-list>\r\n          <app-icon-list-item [icon]=\"faLocationPin\" description=\"City Center\"\r\n                              name=\"GYMBOX BERLIN\"></app-icon-list-item>\r\n          <app-icon-list-item [icon]=\"faUser\" name=\"Make you sweat core workout with Jessy\"></app-icon-list-item>\r\n          <app-icon-list-item [icon]=\"faClock\" description=\"(73 minutes remaining)\"\r\n                              name=\"12:30 - 14:00\"></app-icon-list-item>\r\n        </app-icon-list>\r\n        <mat-divider class=\"divider-with-margin\"></mat-divider>\r\n      </mat-card-content>\r\n      <div>\r\n        <!--      <div class=\"row-label\">Room Booking Options</div>-->\r\n        <div class=\"flat-button-row\">\r\n          <button color=\"primary\" mat-stroked-button>Add Time\r\n            <fa-icon [icon]=\"faAngleRight\" class=\"caret_icon\"></fa-icon>\r\n          </button>\r\n          <button mat-stroked-button routerLink=\"/book_trainer\">\r\n            Add Personal Trainer\r\n            <fa-icon [icon]=\"faAngleRight\" class=\"caret_icon\"></fa-icon>\r\n          </button>\r\n          <button mat-stroked-button>Add Friends\r\n            <fa-icon [icon]=\"faAngleRight\" class=\"caret_icon\"></fa-icon>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </mat-card>\r\n\r\n  </div>\r\n\r\n  <section class=\"sq-button-row-container\">\r\n    <div class=\"row-label\">Smart Room Controls</div>\r\n    <div class=\"sq-button-row\">\r\n      <mat-sq-button [icon]=\"faLightbulb\" [popup]=\"LightsHelpComponent\">\r\n        Lights\r\n      </mat-sq-button>\r\n      <mat-sq-button [icon]=\"faFan\" [popup]=\"ClimateHelpComponent\">\r\n        Climate Control\r\n      </mat-sq-button>\r\n      <mat-sq-button [icon]=\"faDoorOpen\" [popup]=\"DoorHelpComponent\">\r\n        Unlock Door\r\n      </mat-sq-button>\r\n      <mat-sq-button [icon]=\"faPersonBooth\" [popup]=\"BlindsHelpComponent\">\r\n        Window Blinds\r\n      </mat-sq-button>\r\n    </div>\r\n  </section>\r\n\r\n\r\n  <section class=\"sq-button-row-container\">\r\n    <div class=\"row-label\">Equipment</div>\r\n    <div class=\"sq-button-row\">\r\n      <mat-sq-button [icon]=\"faDumbbell\" help_topic=\"help_dumbbells\">\r\n        Dumb&shy;bells\r\n      </mat-sq-button>\r\n      <mat-sq-button [icon]=\"faWeightHanging\" help_topic=\"help_weights\">\r\n        Weights\r\n      </mat-sq-button>\r\n      <mat-sq-button [icon]=\"faPersonBiking\" help_topic=\"help_bike\">\r\n        Bike\r\n      </mat-sq-button>\r\n      <mat-sq-button [icon]=\"faTarp\" help_topic=\"help_yoga\">\r\n        Yoga Mat\r\n      </mat-sq-button>\r\n      <mat-sq-button [icon]=\"faRing\" help_topic=\"help_bands\">\r\n        Resist&shy;ance Bands\r\n      </mat-sq-button>\r\n      <mat-sq-button [icon]=\"faPersonBiking\" help_topic=\"help_treadmill\">\r\n        Treadmill\r\n      </mat-sq-button>\r\n      <mat-sq-button [icon]=\"faPersonBiking\" help_topic=\"help_ellipctical\">\r\n        Elliptical\r\n      </mat-sq-button>\r\n<!--      <mat-sq-button [icon]=\"faPersonBiking\" help_topic=\"help_unknown\">-->\r\n<!--        Unknown-->\r\n<!--      </mat-sq-button>-->\r\n    </div>\r\n  </section>\r\n\r\n  <section class=\"sq-button-row-container\" id=\"amenities\">\r\n    <div class=\"row-label\">Amenities</div>\r\n    <div class=\"sq-button-row\">\r\n<!--      <ng-container *ngFor=\"let number of [0,1,2,3]\">-->\r\n        <mat-sq-button [icon]=\"faSheetPlastic\" help_topic=\"help_towels\">\r\n          Towels\r\n        </mat-sq-button>\r\n        <mat-sq-button [icon]=\"faShower\" help_topic=\"help_shower\">\r\n          Shower\r\n        </mat-sq-button>\r\n        <mat-sq-button [icon]=\"faHotTubPerson\" help_topic=\"help_sauna\">\r\n          Sauna\r\n        </mat-sq-button>\r\n        <mat-sq-button [icon]=\"faBottleWater\" help_topic=\"help_drinks\">\r\n          Drinks\r\n        </mat-sq-button>\r\n        <mat-sq-button [icon]=\"faVault\" help_topic=\"help_lockers\">\r\n          Lockers\r\n        </mat-sq-button>\r\n        <mat-sq-button [icon]=\"faPersonBooth\" help_topic=\"help_changing\">\r\n          Changing Room\r\n        </mat-sq-button>\r\n        <mat-sq-button [icon]=\"faFan\" help_topic=\"help_hairdryer\">\r\n          Hair Dryer\r\n        </mat-sq-button>\r\n        <mat-sq-button [icon]=\"faPumpSoap\" help_topic=\"help_toiletries\">\r\n          Toiletries\r\n        </mat-sq-button>\r\n        <mat-sq-button [icon]=\"faWheatAwn\" help_topic=\"help_nutrition\">\r\n          Nutrition\r\n        </mat-sq-button>\r\n<!--      </ng-container>-->\r\n    </div>\r\n  </section>\r\n\r\n<!--  <button (click)=\"toggleWorkoutTools()\" color=\"primary\" mat-stroked-button>-->\r\n<!--    Open Workout Tools-->\r\n<!--    <fa-icon [icon]=\"faAngleRight\" class=\"caret_icon\"></fa-icon>-->\r\n<!--  </button>-->\r\n\r\n\r\n</div>\r\n<div class=\"media-player-container\">\r\n  <div class=\"media-player-wrapper mat-elevation-z2\" (click)=\"openBottomSheet()\">\r\n    <div class=\"media-player-row\">\r\n      <div matRipple  class=\"mat-ripple-dummy\"></div>\r\n      <img height=\"300\" ngSrc=\"assets/albumcover.jpg\" width=\"300\"/>\r\n      <div class=\"title-wrapper\">\r\n        <mat-card-title>Hold Me Like a Grudge</mat-card-title>\r\n        <mat-card-subtitle>Fall Out Boy</mat-card-subtitle>\r\n      </div>\r\n      <button aria-label=\"Example icon-button with heart icon\" class=\"example-icon favorite-icon small\" mat-icon-button (click)=\"toggleMusicFav($event)\">\r\n        <mat-icon>{{musicIsFav ? \"favorite\": \"favorite_border\"}}</mat-icon>\r\n      </button>\r\n      <button aria-label=\"Example icon-button with menu icon\" class=\"example-icon small\" mat-icon-button (click)=\"toggleMusicPause($event)\">\r\n        <mat-icon>{{musicIsPaused ? \"play_arrow\": \"pause\"}}</mat-icon>\r\n      </button>\r\n    </div>\r\n    <mat-progress-bar mode=\"determinate\" [value]=\"musicProgress\"></mat-progress-bar>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "SocialComponent",
            "id": "component-SocialComponent-7a7f1b1890a68a9f0e1d80556ec9777ec452f831b933df13b55d3fc44ecbf65fcdb587870ed47a1dded451f21d73517fb2dc73edc34958e58a1ec3c13bdf50b2",
            "file": "src/app/modals/social/social.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-social",
            "styleUrls": [
                "./social.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./social.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "dialogRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatDialogRef<SocialComponent>",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "closeDialog",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 11,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport {MatDialogRef} from \"@angular/material/dialog\";\n\n@Component({\n  selector: 'app-social',\n  templateUrl: './social.component.html',\n  styleUrls: ['./social.component.css']\n})\nexport class SocialComponent {\n  constructor(public dialogRef: MatDialogRef<SocialComponent>) { }\n  closeDialog() {\n    this.dialogRef.close();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "h2[mat-dialog-title] {\r\n  margin-bottom: 0;\r\n}\r\nmat-list {\r\n  padding: 0;\r\n}\r\n::ng-deep .mdc-list-item--with-leading-avatar .mdc-list-item__start, .mdc-list-item.mdc-list-item--with-two-lines .mdc-list-item__start {\r\n  margin-left: 0;\r\n}\r\n",
                    "styleUrl": "./social.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "dialogRef",
                        "type": "MatDialogRef<SocialComponent>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 9,
                "jsdoctags": [
                    {
                        "name": "dialogRef",
                        "type": "MatDialogRef<SocialComponent>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<h2 mat-dialog-title>Your Notifications & Social Feed</h2>\n<mat-dialog-content class=\"mat-typography\">\n  <mat-list>\n    <mat-card-subtitle>Unread</mat-card-subtitle>\n    <mat-list-item *ngFor=\"let number of [1,2,3]\">\n      <img matListItemAvatar src=\"https://source.unsplash.com/100x100/?gym\" alt=\"Profile Picture\">\n      <h3 matListItemTitle>Booking Confirmed {{number}}</h3>\n      <p matListItemLine>Tomorrow, 12:30 - 14:00</p>\n    </mat-list-item>\n    <!--    <mat-divider></mat-divider>-->\n    <!--    <div mat-subheader>Social</div>-->\n    <mat-card-subtitle>Read</mat-card-subtitle>\n\n    <mat-list-item *ngFor=\"let number of [1,2,3]\">\n      <img matListItemAvatar src=\"https://source.unsplash.com/100x100/?portrait\" alt=\"Profile Picture\">\n      <h3 matListItemTitle>Your Friend {{number}} wants to workout with you!</h3>\n      <p matListItemLine>\n        <span>Your friend {{number}} has invited you to a workout session!</span>\n        <span class=\"demo-2\"> -- Some Content for this notification</span>\n      </p>\n    </mat-list-item>\n    <mat-list-item>\n      <mat-icon matListItemIcon>stars</mat-icon> <!-- #FaTrophy-->\n      <h3 matListItemTitle>Achievement unlocked!</h3>\n      <p matListItemLine>Gym Enthusiast</p>\n    </mat-list-item>\n  </mat-list>\n</mat-dialog-content>\n<mat-dialog-actions align=\"end\">\n  <!--  <button mat-button mat-dialog-close=\"mat-dialog-close\">Cancel</button>-->\n  <button mat-button [mat-dialog-close]=\"true\" cdkFocusInitial>OK</button>\n</mat-dialog-actions>\n"
        },
        {
            "name": "TaskComponent",
            "id": "component-TaskComponent-1234ee5d58770ac60398f4e16e527d220c97cd40767555f15af16df687621d8431cd0f35d49ec0ed42c03eece462b75fdfd1a115e19531806a9ae9234105283d",
            "file": "src/app/ui-components/task/task.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-task",
            "styleUrls": [
                "./task.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./task.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "task",
                    "defaultValue": "{\r\n    id: \"default-task-id\",\r\n    state: \"TASK_NEW\",\r\n    title: \"default-task-name\",\r\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "Task",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onArchiveTask",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "EventEmitter"
                },
                {
                    "name": "onPinTask",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "onArchive",
                    "args": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 36,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nComponent method to trigger the onArchive event\n",
                    "description": "<p>Component method to trigger the onArchive event</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 833,
                                "end": 835,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "id"
                            },
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 827,
                                "end": 832,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>string</p>\n"
                        }
                    ]
                },
                {
                    "name": "onPin",
                    "args": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nComponent method to trigger the onPin event\n",
                    "description": "<p>Component method to trigger the onPin event</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 687,
                                "end": 689,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "id"
                            },
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 681,
                                "end": 686,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>string</p>\n"
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component, Input, Output, EventEmitter} from '@angular/core';\r\nimport { Task } from '../../models/task.model';\r\n\r\n@Component({\r\n  selector: 'app-task',\r\n  templateUrl: './task.component.html',\r\n  styleUrls: ['./task.component.css']\r\n})\r\n\r\nexport class TaskComponent {\r\n  @Input() task: Task = {\r\n    id: \"default-task-id\",\r\n    state: \"TASK_NEW\",\r\n    title: \"default-task-name\",\r\n  }\r\n\r\n  // tslint:disable-next-line: no-output-on-prefix\r\n  @Output()\r\n  onPinTask = new EventEmitter<Event>();\r\n\r\n  // tslint:disable-next-line: no-output-on-prefix\r\n  @Output()\r\n  onArchiveTask = new EventEmitter<Event>();\r\n\r\n  /**\r\n   * Component method to trigger the onPin event\r\n   * @param id string\r\n   */\r\n  onPin(id: any) {\r\n    this.onPinTask.emit(id);\r\n  }\r\n  /**\r\n   * Component method to trigger the onArchive event\r\n   * @param id string\r\n   */\r\n  onArchive(id: any) {\r\n    this.onArchiveTask.emit(id);\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./task.component.css"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"list-item {{ task.state }}\">\r\n  <label\r\n    [attr.aria-label]=\"'archiveTask-' + task.id\"\r\n    for=\"checked-{{ task.id }}\"\r\n    class=\"checkbox\"\r\n  >\r\n    <input\r\n      type=\"checkbox\"\r\n      disabled=disabled\r\n      [defaultChecked]=\"task.state === 'TASK_ARCHIVED'\"\r\n      name=\"checked-{{ task.id }}\"\r\n      id=\"checked-{{ task.id }}\"\r\n    />\r\n    <span class=\"checkbox-custom\" (click)=\"onArchive(task.id)\"></span>\r\n  </label>\r\n  <label\r\n    [attr.aria-label]=\"task.title + ''\"\r\n    for=\"title-{{ task.id }}\"\r\n    class=\"title\"\r\n  >\r\n    <input\r\n      type=\"text\"\r\n      [value]=\"task.title\"\r\n      readonly=readonly\r\n      id=\"title-{{ task.id }}\"\r\n      name=\"title-{{ task.id }}\"\r\n      placeholder=\"Input title\"\r\n    />\r\n  </label>\r\n  <span *ngIf=\"task.state === 'TASK_PINNED'\" class=\"task_pinned\">Pinned</span>\r\n\r\n\r\n  <button\r\n    *ngIf=\" task.state !==\r\n  'TASK_ARCHIVED'\"\r\n    class=\"pin-button\"\r\n    [attr.aria-label]=\"'pinTask-' + task.id\"\r\n    (click)=\"onPin(task.id)\"\r\n  >\r\n    S\r\n  </button>\r\n</div>\r\n"
        },
        {
            "name": "TaskListComponent",
            "id": "component-TaskListComponent-b5d978f309cf7e19831e79c129b1d70e476247f6f65f4f7c6d0053ee0fb20878c82d9eac0b838a5cda314fd25bae378606632d09dfed4323ea99960140b1d46f",
            "file": "src/app/ui-components/task-list/task-list.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-task-list",
            "styleUrls": [
                "./task-list.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./task-list.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "loading",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nChecks if it's in loading state",
                    "description": "<p>Checks if it&#39;s in loading state</p>\n",
                    "line": 14,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onArchiveTask",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nEvent to change the task to archived",
                    "description": "<p>Event to change the task to archived</p>\n",
                    "line": 24,
                    "type": "EventEmitter"
                },
                {
                    "name": "onPinTask",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nEvent to change the task to pinned",
                    "description": "<p>Event to change the task to pinned</p>\n",
                    "line": 19,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "tasksInOrder",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Task[]",
                    "optional": false,
                    "description": "<p>The list of tasks</p>\n",
                    "line": 11,
                    "rawdescription": "\nThe list of tasks"
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\r\nimport { Task } from '../../models/task.model';\r\n\r\n@Component({\r\n  selector: 'app-task-list',\r\n  templateUrl: './task-list.component.html',\r\n  styleUrls: ['./task-list.component.css']\r\n})\r\nexport class TaskListComponent {\r\n  /** The list of tasks */\r\n   tasksInOrder: Task[] = [];\r\n\r\n  /** Checks if it's in loading state */\r\n  @Input() loading = false;\r\n\r\n  /** Event to change the task to pinned */\r\n    // tslint:disable-next-line: no-output-on-prefix\r\n  @Output()\r\n  onPinTask = new EventEmitter<Event>();\r\n\r\n  /** Event to change the task to archived */\r\n    // tslint:disable-next-line: no-output-on-prefix\r\n  @Output()\r\n  onArchiveTask = new EventEmitter<Event>();\r\n\r\n  set tasks(arr: Task[]){\r\n    const initialTasks = [\r\n      ...arr.filter(t=>t.state === 'TASK_PINNED'),\r\n      ...arr.filter(t=>t.state !== 'TASK_PINNED'),\r\n    ];\r\n    const filteredTasks = initialTasks.filter(\r\n      t => t.state === 'TASK_INBOX' || t.state === 'TASK_PINNED'\r\n    );\r\n    this.tasksInOrder = filteredTasks.filter(\r\n      t => t.state === 'TASK_INBOX' || t.state === 'TASK_PINNED'\r\n    )\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./task-list.component.css"
                }
            ],
            "stylesData": "",
            "accessors": {
                "tasks": {
                    "name": "tasks",
                    "setSignature": {
                        "name": "tasks",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "arr",
                                "type": "Task[]",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 26,
                        "jsdoctags": [
                            {
                                "name": "arr",
                                "type": "Task[]",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                }
            },
            "templateData": "<div class=\"list-items\">\r\n  <app-task\r\n    *ngFor=\"let task of tasksInOrder\"\r\n    [task]=\"task\"\r\n    (onArchiveTask)=\"onArchiveTask.emit($event)\"\r\n    (onPinTask)=\"onPinTask.emit($event)\"\r\n  >\r\n  </app-task>\r\n  <div *ngIf=\"tasksInOrder.length === 0 && !loading\">You have no tasks</div>\r\n\r\n  <div *ngIf=\"loading\">\r\n\r\n    <div *ngFor=\"let i of [1, 2, 3, 4, 5, 6]\" class=\"loading-item\">\r\n        <span class=\"glow-checkbox\"></span>\r\n        <span class=\"glow-text\">\r\n          <span>Loading</span> <span>cool</span> <span>state</span>\r\n        </span>\r\n      </div>\r\n\r\n  </div>\r\n\r\n</div>\r\n"
        },
        {
            "name": "UserComponent",
            "id": "component-UserComponent-1f96b706a2424879e563e523565aad876456bed07b3ac88ee7644290ec7766b64a0e191dd056d20d4bdb6c0f3fa9492487db993b60e7d1f2e396d26398160d7a",
            "file": "src/app/pages/user/user.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-user",
            "styleUrls": [
                "./user.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./user.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "birthday",
                    "defaultValue": "new FormControl(DateTime.fromISO(\"1998-05-25T09:24\"))",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "body_type",
                    "defaultValue": "1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "body_types",
                    "defaultValue": "[\"Male\", \"Female\", \"Other\"]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "fitness_level",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "fitness_levels",
                    "defaultValue": "[\"No Experience\", \"Beginner\", \"Intermediate\", \"Professional\", \"Expert\"]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "height",
                    "defaultValue": "180",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "show_age",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "title",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "titles",
                    "defaultValue": "[\"Gym Rookie\", \"Gymnast\", \"Strength Builder\", \"The Beast\", \"Only Works Legs\", \"Final Form\", \"Aesthetic God\", \"High Kick\", \"Animal\", \"King of the Gym\", \"The Lumberjack\", \"Squatmaster\",\r\n    \"Chickenlegs\", \"Hulk\", \"Ripped\", \"Popeye\"]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "training_goals",
                    "defaultValue": "new FormControl('')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "training_goals_list",
                    "defaultValue": "['Weight loss', 'Strength', 'Rehabilitation', 'Other']",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "user_description",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | undefined",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "username",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | undefined",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "weight",
                    "defaultValue": "80",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "_destroy",
                    "defaultValue": "new Subject<void>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseComponent"
                    }
                },
                {
                    "name": "destroy$",
                    "defaultValue": "this._destroy as Observable<void>",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "BaseComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "getAge",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "setUsername",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 49,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nLifecycle hook called by angular framework when extended class dies.",
                    "description": "<p>Lifecycle hook called by angular framework when extended class dies.</p>\n",
                    "inheritance": {
                        "file": "BaseComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component, OnDestroy, OnInit} from '@angular/core';\r\nimport {FormControl} from \"@angular/forms\";\r\nimport {DateTime} from \"luxon\";\r\nimport {Subscription} from 'rxjs';\r\nimport {BaseComponent} from \"../../helpers/base/base.component\";\r\nimport {DataService} from \"../../services/data.service\";\r\n\r\n@Component({\r\n  selector: 'app-user',\r\n  templateUrl: './user.component.html',\r\n  styleUrls: ['./user.component.css']\r\n})\r\n\r\nexport class UserComponent extends BaseComponent implements OnInit, OnDestroy {\r\n  training_goals = new FormControl('');\r\n  training_goals_list: string[] = ['Weight loss', 'Strength', 'Rehabilitation', 'Other'];\r\n  username: string | undefined;\r\n  user_description: string | undefined;\r\n  birthday = new FormControl(DateTime.fromISO(\"1998-05-25T09:24\"));\r\n  show_age = false;\r\n  fitness_levels = [\"No Experience\", \"Beginner\", \"Intermediate\", \"Professional\", \"Expert\"]\r\n  fitness_level = 0;\r\n  body_types = [\"Male\", \"Female\", \"Other\"]\r\n  body_type = 1;\r\n  titles = [\"Gym Rookie\", \"Gymnast\", \"Strength Builder\", \"The Beast\", \"Only Works Legs\", \"Final Form\", \"Aesthetic God\", \"High Kick\", \"Animal\", \"King of the Gym\", \"The Lumberjack\", \"Squatmaster\",\r\n    \"Chickenlegs\", \"Hulk\", \"Ripped\", \"Popeye\"]\r\n  title = 0;\r\n  height = 180;\r\n  weight = 80;\r\n\r\n  getAge() {\r\n    let age = this.birthday.value?.diffNow('years')?.years;\r\n    if (age !== undefined) {\r\n      age = -1 * Math.round(age)\r\n    }\r\n    return age\r\n  }\r\n\r\n  constructor(private data: DataService) {\r\n    super()\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.user_description = \"I like to party!\"\r\n    this.data.currentUsername.dieWith(this).subscribe(d => this.username = d)\r\n\r\n  }\r\n\r\n  setUsername() {\r\n    if (this.username !== undefined) {\r\n      this.data.changeUsername(this.username)\r\n    }\r\n  }\r\n\r\n}\r\n\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".example-profile-image {\r\n  background-image: url(\"https://source.unsplash.com/500x500/?profile+photo+sport+portrait+adult\");\r\n  background-size: cover;\r\n  height: 90px;\r\n  width: 90px;\r\n}\r\n\r\nmat-card-subtitle {\r\n  font-size: 1rem;\r\n}\r\n\r\nmat-card-title {\r\n  font-size: 2.5rem;\r\n}\r\n\r\nmat-card {\r\n  margin-top: var(--min-content-wrap-margin);\r\n}\r\n\r\n.user-settings {\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.example-additional-selection {\r\n  opacity: 0.75;\r\n  font-size: 0.75em;\r\n}\r\n\r\nmat-form-field {\r\n  width: 100%;\r\n  margin-bottom: calc(var(--min-content-wrap-margin) / 2);\r\n}\r\n\r\n.input-row {\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  width: 100%;\r\n}\r\n\r\n.input-row mat-form-field:nth-child(1) {\r\n  margin-right: var(--min-content-wrap-margin);\r\n}\r\n\r\nmat-divider.divider-with-margin {\r\n  margin-top: var(--min-content-wrap-margin);\r\n  margin-bottom: var(--min-content-wrap-margin);\r\n}\r\n\r\n.datepicker_suffix {\r\n  vertical-align: bottom;\r\n}\r\n\r\n.form-field-layout {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n}\r\n.form-field-layout [matSuffix] {\r\n  flex-shrink: 0;\r\n  height: 24px;\r\n  width: 24px;\r\n  padding: 12px;\r\n}\r\n",
                    "styleUrl": "./user.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "data",
                        "type": "DataService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 37,
                "jsdoctags": [
                    {
                        "name": "data",
                        "type": "DataService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": "BaseComponent",
            "implements": [
                "OnInit",
                "OnDestroy"
            ],
            "templateData": "<div class=\"content_width_wrapper\">\r\n  <mat-card>\r\n    <mat-card-header>\r\n      <div mat-card-avatar class=\"example-profile-image\"></div>\r\n      <mat-card-subtitle>{{titles[title]}}</mat-card-subtitle>\r\n      <mat-card-title>{{username ? username : 'Anonymous'}}</mat-card-title>\r\n      <mat-card-subtitle>\r\n        <!--        <mat-icon color=\"primary\">public</mat-icon>-->\r\n        <!--        <mat-icon>face</mat-icon>-->\r\n        <span *ngIf=\"show_age\"><mat-icon>cake</mat-icon>\r\n          {{getAge()}} years old. </span>\r\n\r\n      </mat-card-subtitle>\r\n    </mat-card-header>\r\n    <mat-card-content>\r\n      <p>{{user_description}}</p>\r\n      <mat-divider class=\"divider-with-margin\"></mat-divider>\r\n      <h2>Settings</h2>\r\n      <p>Manage your profile here..</p>\r\n      <mat-accordion-responsive>\r\n        <mat-expansion-panel>\r\n          <mat-expansion-panel-header>\r\n            <div class=\"mat-expansion-panel-header-content\">\r\n              <mat-panel-title>\r\n                <span>Public Profile</span>\r\n              </mat-panel-title>\r\n              <mat-panel-description>\r\n                <span>{{username ? username : 'Anonymous'}}, {{show_age ? getAge() + ',' : ''}} {{titles[title]}}\r\n                  , '{{user_description}}'</span>\r\n              </mat-panel-description>\r\n            </div>\r\n          </mat-expansion-panel-header>\r\n          <p>Describe how you want to be seen by other users.</p>\r\n          <div class=\"user-settings\">\r\n            <mat-form-field>\r\n              <mat-label>Name</mat-label>\r\n              <input matInput [(ngModel)]=\"username\" (ngModelChange)=\"setUsername()\">\r\n              <mat-icon matSuffix>public</mat-icon>\r\n            </mat-form-field>\r\n            <mat-form-field>\r\n              <mat-label>Title</mat-label>\r\n              <mat-select [(ngModel)]=\"title\">\r\n                <app-infobanner>Unlock more titles by visiting local GYMBOXes, completing workouts and participating in\r\n                  special events.\r\n                </app-infobanner>\r\n                <mat-option *ngFor=\"let t of titles; let i = index\" [value]=\"i\">{{t}}</mat-option>\r\n              </mat-select>\r\n              <mat-icon matSuffix>public</mat-icon>\r\n\r\n            </mat-form-field>\r\n            <mat-form-field>\r\n              <mat-label>About me</mat-label>\r\n              <textarea matInput #aboutMe maxlength=\"250\" [(ngModel)]=\"user_description\"></textarea>\r\n              <mat-icon matSuffix>public</mat-icon>\r\n              <mat-hint align=\"end\">{{aboutMe.value.length}} / 250</mat-hint>\r\n\r\n            </mat-form-field>\r\n\r\n            <div class=\"form-field-layout\">\r\n              <mat-checkbox class=\"ml-3\" [(ngModel)]=\"show_age\">Show my age ({{getAge()}}) on my public profile.</mat-checkbox>\r\n              <mat-icon matSuffix>public</mat-icon>\r\n            </div>\r\n\r\n\r\n\r\n          </div>\r\n        </mat-expansion-panel>\r\n        <mat-expansion-panel>\r\n          <mat-expansion-panel-header>\r\n            <div class=\"mat-expansion-panel-header-content\">\r\n              <mat-panel-title>\r\n                <span>My Training</span>\r\n                <!--                <span>Body Physique</span>-->\r\n              </mat-panel-title>\r\n              <mat-panel-description>\r\n              <span>{{fitness_levels[fitness_level]}}, {{training_goals.value?.[0] || 'No Goals set'}}\r\n                {{(training_goals.value?.length || 0) > 1 ? '(+' + ((training_goals.value?.length || 0) - 1 + ')').toString() : ''}}</span>\r\n              </mat-panel-description>\r\n            </div>\r\n          </mat-expansion-panel-header>\r\n          <p>This health data will never been shown to other users</p>\r\n          <div class=\"user-settings\">\r\n\r\n            <mat-form-field>\r\n              <mat-label>Fitness Experience</mat-label>\r\n              <mat-select [(ngModel)]=\"fitness_level\">\r\n                <mat-option *ngFor=\"let l of fitness_levels; let i = index\" [value]=\"i\">{{l}}</mat-option>\r\n              </mat-select>\r\n              <mat-icon matSuffix>lock</mat-icon>\r\n            </mat-form-field>\r\n            <mat-form-field>\r\n              <mat-label>Training Goals</mat-label>\r\n              <mat-select [formControl]=\"training_goals\" multiple>\r\n                <mat-select-trigger>\r\n                  {{training_goals.value?.[0] || ''}}\r\n                  <span *ngIf=\"(training_goals.value?.length || 0) > 1\" class=\"example-additional-selection\">\r\n        (+{{(training_goals.value?.length || 0) - 1}} {{training_goals.value?.length === 2 ? 'other' : 'others'}})\r\n      </span>\r\n                </mat-select-trigger>\r\n                <mat-option *ngFor=\"let training_goal of training_goals_list\"\r\n                            [value]=\"training_goal\">{{training_goal}}</mat-option>\r\n              </mat-select>\r\n              <mat-icon matSuffix>lock</mat-icon>\r\n\r\n            </mat-form-field>\r\n          </div>\r\n        </mat-expansion-panel>\r\n        <mat-expansion-panel>\r\n          <mat-expansion-panel-header>\r\n            <div class=\"mat-expansion-panel-header-content\">\r\n              <mat-panel-title>\r\n                <span>My Body</span>\r\n                <!--                <span>Health Data</span>-->\r\n                <!--                <span>Body Physique</span>-->\r\n              </mat-panel-title>\r\n              <mat-panel-description>\r\n                <span>{{body_types[body_type]}}, {{birthday.value?.toFormat(\"dd.MM.yyyy\")}}, {{height}}cm, {{weight}}\r\n                  kg</span>\r\n              </mat-panel-description>\r\n            </div>\r\n          </mat-expansion-panel-header>\r\n          <p>This health data will never been shown to other users</p>\r\n          <div class=\"user-settings\">\r\n            <mat-form-field>\r\n              <mat-label>Body type</mat-label>\r\n              <mat-select [(ngModel)]=\"body_type\">\r\n                <mat-option *ngFor=\"let b of body_types; let i = index\" [value]=\"i\">{{b}}</mat-option>\r\n              </mat-select>\r\n              <mat-icon matSuffix>lock</mat-icon>\r\n            </mat-form-field>\r\n            <mat-form-field>\r\n              <mat-label>Birthday</mat-label>\r\n              <input matInput [matDatepicker]=\"birthday_picker\" [formControl]=\"birthday\">\r\n              <mat-hint>DD.MM.YYYY</mat-hint>\r\n              <mat-datepicker-toggle matIconSuffix [for]=\"birthday_picker\"></mat-datepicker-toggle>\r\n              <mat-icon matSuffix class=\"datepicker_suffix\">lock</mat-icon>\r\n              <mat-datepicker #birthday_picker></mat-datepicker>\r\n            </mat-form-field>\r\n\r\n\r\n            <div class=\"input-row\">\r\n              <mat-form-field>\r\n                <mat-label>Height in cm</mat-label>\r\n                <input matInput placeholder=\"180\" type=\"number\" [(ngModel)]=\"height\" max=\"220\" min=\"0\">\r\n                <mat-icon matSuffix>lock</mat-icon>\r\n              </mat-form-field>\r\n              <mat-form-field>\r\n                <mat-label>Weight in kg</mat-label>\r\n                <input matInput placeholder=\"80\" type=\"number\" [(ngModel)]=\"weight\" max=\"300\" min=\"10\">\r\n                <mat-icon matSuffix>lock</mat-icon>\r\n              </mat-form-field>\r\n            </div>\r\n          </div>\r\n        </mat-expansion-panel>\r\n      </mat-accordion-responsive>\r\n\r\n      <mat-divider class=\"divider-with-margin\"></mat-divider>\r\n\r\n      <p>Changes are saved automatically.</p>\r\n\r\n      <mat-divider class=\"divider-with-margin\"></mat-divider>\r\n    </mat-card-content>\r\n    <mat-card-actions align=\"end\">\r\n      <button mat-button routerLink=\"/welcome\">LOGOUT</button>\r\n    </mat-card-actions>\r\n  </mat-card>\r\n</div>\r\n"
        },
        {
            "name": "WelcomeComponent",
            "id": "component-WelcomeComponent-64a4cf922dec25760773d9c5923a0a62301a1cb1862b5fb06b8bf875c9b8e4acd6a22a414db592741332fff3f72efb36e808244ddc4bf6754271ff81a4011034",
            "file": "src/app/pages/welcome/welcome.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-welcome",
            "styleUrls": [
                "./welcome.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./welcome.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-welcome',\n  templateUrl: './welcome.component.html',\n  styleUrls: ['./welcome.component.css']\n})\nexport class WelcomeComponent {\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "mat-divider {\r\n  margin: var(--min-content-wrap-margin) 0;\r\n}\r\n\r\n.cartoon_characters {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  gap: var(--min-content-wrap-margin);\r\n}\r\n\r\n.cartoon_characters img {\r\n  width: fit-content;\r\n  height: fit-content;\r\n  max-height: 190px;\r\n  max-width: 190px;\r\n  transition: 0.1s;\r\n}\r\n\r\nmat-card-header {\r\n  justify-content: center;\r\n  margin-bottom: var(--min-content-wrap-margin);\r\n}\r\nmat-card-title {\r\n  font-size: 22px;\r\n}\r\n\r\nmat-card-subtitle {\r\n  text-align: center;\r\n}\r\n\r\n\r\n@media(max-width: 800px) {\r\n  ::ng-deep .minimal_stepper .mat-vertical-content {\r\n    padding: 0;\r\n  }\r\n\r\n  .cartoon_characters img {\r\n    max-width: 120px;\r\n  }\r\n}\r\n@media(max-width: 500px) {\r\n  ::ng-deep .minimal_stepper .mat-vertical-content-container {\r\n    margin-left: 0;\r\n  }\r\n\r\n  ::ng-deep .minimal_stepper .mat-vertical-content-container::before {\r\n    border: none;\r\n  }\r\n  .cartoon_characters img {\r\n    max-width: 80px;\r\n  }\r\n}\r\n",
                    "styleUrl": "./welcome.component.css"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"content_width_wrapper\">\n  <mat-card>\n    <mat-card-header>\n      <mat-card-title>Welcome to GYMBOX!</mat-card-title>\n      <mat-card-subtitle>Explore what's waiting for you:</mat-card-subtitle>\n    </mat-card-header>\n    <mat-stepper class=\"minimal_stepper\" orientation=\"vertical\">\n      <mat-step completed=\"false\" label=\"Private and Comfortable Workouts\">\n        <mat-card-content>\n          <div class=\"cartoon_characters\">\n            <div>\n              <p>Welcome to GYMBOX, the ultimate solution for those who want to workout in a private and comfortable\n                environment.\n              <p>\n              <p>With our premium gym rental service, you can book your own private gym and workout anytime, anywhere -\n                you decide.</p>\n            </div>\n            <img height=\"835\" ngSrc=\"assets/female.jpg\" width=\"448\"/>\n          </div>\n          <mat-divider></mat-divider>\n        </mat-card-content>\n        <mat-card-actions align=\"end\">\n          <button color=\"primary\" mat-button matStepperNext>Next</button>\n        </mat-card-actions>\n      </mat-step>\n      <mat-step completed=\"false\" label=\"Personalized Workout Experience\">\n        <mat-card-content>\n          <div class=\"cartoon_characters\">\n            <img height=\"822\" ngSrc=\"assets/male.jpg\" width=\"561\"/>\n            <div>\n              <p>Say goodbye to crowded public gyms and long waiting times for equipment. At GYMBOX, you have access to\n                state-of-the-art equipment, exclusive amenities, and a fully personalized workout experience. </p>\n              <p>Whether you're a fitness enthusiast, a professional athlete, or just looking to stay healthy and fit,\n                GYMBOX has everything you need to achieve your goals.</p>\n            </div>\n          </div>\n          <mat-divider></mat-divider>\n        </mat-card-content>\n        <mat-card-actions align=\"end\">\n          <button mat-button matStepperPrevious>Back</button>\n          <button color=\"primary\" mat-button matStepperNext>Next</button>\n        </mat-card-actions>\n      </mat-step>\n      <mat-step completed=\"false\" label=\"Join the GYMBOX Community\">\n        <mat-card-content>\n          <div class=\"cartoon_characters\">\n            <div>\n              <p>Browse local gyms, choose the one that suits your needs, and book instantly.\n                Customize your workout with your own equipment, favorite music, and friends.</p>\n              <p>Join the GYMBOX community today and experience the ultimate in privacy, convenience, and quality.\n                Start your fitness journey on your own terms and become the best version of yourself with GYMBOX.</p>\n            </div>\n            <img height=\"774\" ngSrc=\"assets/equipment.jpg\" width=\"1024\"/>\n          </div>\n          <mat-divider></mat-divider>\n        </mat-card-content>\n        <mat-card-actions align=\"end\">\n          <button mat-button matStepperPrevious>Back</button>\n          <button color=\"primary\" mat-button routerLink=\"/register\">Get Started</button>\n        </mat-card-actions>\n      </mat-step>\n    </mat-stepper>\n  </mat-card>\n\n  <mat-card-actions align=\"end\">\n    <button mat-button routerLink=\"/register\">Skip</button>\n  </mat-card-actions>\n  <!--  <mat-card>-->\n  <!--    <mat-card-content>-->\n  <!--      <div class=\"cartoon_characters\">-->\n  <!--        <div>-->\n  <!--          <p>Welcome to GYMBOX, the ultimate solution for those who want to workout in a private and comfortable-->\n  <!--            environment.-->\n  <!--          <p>-->\n  <!--          <p>With our premium gym rental service, you can book your own private gym and workout anytime, anywhere - you-->\n  <!--            decide.</p>-->\n  <!--        </div>-->\n  <!--        <img ngSrc=\"assets/female.jpg\" height=\"835\" width=\"448\"/>-->\n  <!--      </div>-->\n\n  <!--      <mat-divider></mat-divider>-->\n  <!--    </mat-card-content>-->\n  <!--    <mat-card-actions align=\"end\">-->\n  <!--      <button mat-button color=\"primary\">-->\n  <!--        Next-->\n  <!--      </button>-->\n  <!--    </mat-card-actions>-->\n  <!--  </mat-card>-->\n\n\n</div>\n"
        },
        {
            "name": "WorkoutToolsComponent",
            "id": "component-WorkoutToolsComponent-12d481af2ef6c1b90999c484839456c9d416868578420afbb9b2f7db43ea6031e35c5f770deb93ca59901844766ca3835455bf2c8497dbdce2e9dccd195afac7",
            "file": "src/app/modals/workout-tools/workout-tools.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-workout-tools",
            "styleUrls": [
                "./workout-tools.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./workout-tools.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "faArrowsSpin",
                    "defaultValue": "faArrowsSpin",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        122,
                        144
                    ]
                },
                {
                    "name": "faCalculator",
                    "defaultValue": "faCalculator",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        122,
                        144
                    ]
                },
                {
                    "name": "faClock",
                    "defaultValue": "faClock",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        122,
                        144
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport {faClock, faArrowsSpin, faCalculator} from \"@fortawesome/free-solid-svg-icons\";\n\n@Component({\n  selector: 'app-workout-tools',\n  templateUrl: './workout-tools.component.html',\n  styleUrls: ['./workout-tools.component.css']\n})\nexport class WorkoutToolsComponent {\n\n  protected readonly faClock = faClock;\n  protected readonly faArrowsSpin = faArrowsSpin;\n  protected readonly faCalculator = faCalculator;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "mat-sq-button, h4, mat-divider  {\r\n  margin: var(--min-content-wrap-margin);\r\n  display: block;\r\n  text-align: center;\r\n}\r\n",
                    "styleUrl": "./workout-tools.component.css"
                }
            ],
            "stylesData": "",
            "templateData": "<h4>Workout<br/>Tools</h4>\n<mat-divider></mat-divider>\n<mat-sq-button [icon]=\"faClock\">Interval Timer</mat-sq-button>\n<mat-sq-button [icon]=\"faArrowsSpin\">Rep Counter</mat-sq-button>\n<mat-sq-button [icon]=\"faCalculator\">Calorie Calc</mat-sq-button>\n"
        }
    ],
    "modules": [
        {
            "name": "AppModule",
            "id": "module-AppModule-18ea6e21db484f0bb9e2889ca6a02c1a76a5962503fdb8fe6933cec5f060dbfd4261ac068e18b2104c3c8fa4d5c889f5073fa38832b3ba062e7f4597fad5b0bd",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app.module.ts",
            "methods": [],
            "sourceCode": "import {NgOptimizedImage} from \"@angular/common\";\r\nimport {HttpClientModule} from '@angular/common/http';\r\nimport {NgModule} from '@angular/core';\r\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\r\nimport {LuxonDateAdapter, MAT_LUXON_DATE_ADAPTER_OPTIONS, MatLuxonDateModule} from \"@angular/material-luxon-adapter\";\r\nimport {MatBadgeModule} from \"@angular/material/badge\";\r\nimport {MatBottomSheetModule} from \"@angular/material/bottom-sheet\";\r\nimport {MatButtonModule} from \"@angular/material/button\";\r\nimport {MatCardModule} from \"@angular/material/card\";\r\nimport {MatCheckboxModule} from \"@angular/material/checkbox\";\r\nimport {MatChipsModule} from \"@angular/material/chips\";\r\n\r\nimport {DateAdapter, MAT_DATE_FORMATS, MAT_DATE_LOCALE, MatRippleModule} from \"@angular/material/core\";\r\nimport {MatDatepickerModule} from \"@angular/material/datepicker\";\r\nimport {MatDialogModule} from \"@angular/material/dialog\";\r\nimport {MatDividerModule} from \"@angular/material/divider\";\r\nimport {MatExpansionModule} from \"@angular/material/expansion\";\r\nimport {MatFormFieldModule} from \"@angular/material/form-field\";\r\nimport {MatIconModule} from \"@angular/material/icon\";\r\nimport {MatInputModule} from \"@angular/material/input\";\r\nimport {MatListModule} from \"@angular/material/list\";\r\nimport {MatMenuModule} from \"@angular/material/menu\";\r\nimport {MatProgressBarModule} from \"@angular/material/progress-bar\";\r\nimport {MatProgressSpinnerModule} from \"@angular/material/progress-spinner\";\r\nimport {MatRadioModule} from \"@angular/material/radio\";\r\nimport {MatSelectModule} from \"@angular/material/select\";\r\nimport {MatSidenavModule} from \"@angular/material/sidenav\";\r\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\r\nimport {MatSliderModule} from \"@angular/material/slider\";\r\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\r\nimport {MatStepperModule} from \"@angular/material/stepper\";\r\nimport {MatTabsModule} from \"@angular/material/tabs\";\r\nimport {MatToolbarModule} from \"@angular/material/toolbar\";\r\nimport {MatTooltipModule} from \"@angular/material/tooltip\";\r\nimport {BrowserModule} from '@angular/platform-browser';\r\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\r\n\r\nimport {FontAwesomeModule} from '@fortawesome/angular-fontawesome';\r\n\r\nimport {AppRoutingModule} from './app-routing.module';\r\nimport {AppComponent} from './app.component';\r\nimport {BlindsHelpComponent} from './modals/help/blinds-help/blinds-help.component';\r\nimport {ClimateHelpComponent} from './modals/help/climate-help/climate-help.component';\r\nimport {DoorHelpComponent} from './modals/help/door-help/door-help.component';\r\nimport {HelpComponent} from './modals/help/help.component';\r\nimport {LightsHelpComponent} from './modals/help/lights/lights-help.component';\r\nimport {AboutComponent} from './pages/about/about.component';\r\nimport {BookGymComponent} from './pages/book-gym/book-gym.component';\r\nimport {HomeComponent} from './pages/home/home.component';\r\nimport {PageNotFoundComponent} from './pages/page-not-found/page-not-found.component';\r\nimport {RoomComponent} from './pages/room/room.component';\r\nimport {UserComponent} from './pages/user/user.component';\r\n\r\nimport {GymCardComponent} from './ui-components/gym-card/gym-card.component';\r\nimport {IconListItemComponent} from './ui-components/icon-list-item/icon-list-item.component';\r\nimport {IconListComponent} from './ui-components/icon-list/icon-list.component';\r\nimport {InfobannerComponent} from './ui-components/infobanner/infobanner.component';\r\nimport {\r\n  MatAccordionResponsiveComponent\r\n} from './ui-components/mat-accordion-responsive/mat-accordion-responsive.component';\r\nimport {MatSqButtonComponent} from './ui-components/mat-sq-button/mat-sq-button.component';\r\nimport {TaskListComponent} from './ui-components/task-list/task-list.component';\r\nimport {TaskComponent} from './ui-components/task/task.component';\r\nimport {WorkoutToolsComponent} from './modals/workout-tools/workout-tools.component';\r\nimport { WelcomeComponent } from './pages/welcome/welcome.component';\r\nimport { LoginComponent } from './pages/login/login.component';\r\nimport { RegisterComponent } from './pages/register/register.component';\r\nimport { MediacontrolComponent } from './modals/mediacontrol/mediacontrol.component';\r\nimport { BookingCardComponent } from './ui-components/booking-card/booking-card.component';\r\nimport { BookTrainerComponent } from './pages/book-trainer/book-trainer.component';\r\nimport { SocialComponent } from './modals/social/social.component';\r\n\r\nconst MODULE_DATE_FORMATS = {\r\n  parse: {\r\n    dateInput: 'dd.LL.yyyy'\r\n  },\r\n  display: {\r\n    dateInput: 'dd.LL.yyyy',\r\n    monthYearLabel: 'LLLL yyyy',\r\n    dateA11yLabel: 'LL',\r\n    monthYearA11yLabel: 'LLLL YYYY'\r\n  }\r\n};\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HomeComponent,\r\n    AboutComponent,\r\n    TaskComponent,\r\n    TaskListComponent,\r\n    PageNotFoundComponent,\r\n    RoomComponent,\r\n    MatSqButtonComponent,\r\n    HelpComponent,\r\n    LightsHelpComponent,\r\n    BlindsHelpComponent,\r\n    ClimateHelpComponent,\r\n    DoorHelpComponent,\r\n    WorkoutToolsComponent,\r\n    UserComponent,\r\n    BookGymComponent,\r\n    GymCardComponent,\r\n    IconListComponent,\r\n    IconListItemComponent,\r\n    MatAccordionResponsiveComponent,\r\n    InfobannerComponent,\r\n    WelcomeComponent,\r\n    LoginComponent,\r\n    RegisterComponent,\r\n    MediacontrolComponent,\r\n    BookingCardComponent,\r\n    BookTrainerComponent,\r\n    SocialComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    BrowserAnimationsModule,\r\n    FontAwesomeModule,\r\n    MatSlideToggleModule,\r\n    MatToolbarModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    MatCardModule,\r\n    MatProgressSpinnerModule,\r\n    MatDividerModule,\r\n    MatDialogModule,\r\n    MatTabsModule,\r\n    MatSliderModule,\r\n    MatSidenavModule,\r\n    MatCheckboxModule,\r\n    MatListModule,\r\n    MatSnackBarModule,\r\n    MatProgressBarModule,\r\n    MatStepperModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatSelectModule,\r\n    MatChipsModule,\r\n    MatRadioModule,\r\n    MatExpansionModule,\r\n    MatDatepickerModule,\r\n    MatLuxonDateModule,\r\n    NgOptimizedImage,\r\n    MatBottomSheetModule,\r\n    MatRippleModule,\r\n    MatMenuModule,\r\n    MatBadgeModule,\r\n    MatTooltipModule\r\n  ],\r\n  providers: [\r\n    {provide: MAT_LUXON_DATE_ADAPTER_OPTIONS, useValue: {useUtc: true}},\r\n    {provide: DateAdapter, useClass: LuxonDateAdapter, deps: [MAT_DATE_LOCALE, MAT_LUXON_DATE_ADAPTER_OPTIONS]},\r\n    {provide: MAT_DATE_FORMATS, useValue: MODULE_DATE_FORMATS}\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {\r\n}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AboutComponent"
                        },
                        {
                            "name": "AppComponent"
                        },
                        {
                            "name": "BlindsHelpComponent"
                        },
                        {
                            "name": "BookGymComponent"
                        },
                        {
                            "name": "BookTrainerComponent"
                        },
                        {
                            "name": "BookingCardComponent"
                        },
                        {
                            "name": "ClimateHelpComponent"
                        },
                        {
                            "name": "DoorHelpComponent"
                        },
                        {
                            "name": "GymCardComponent"
                        },
                        {
                            "name": "HelpComponent"
                        },
                        {
                            "name": "HomeComponent"
                        },
                        {
                            "name": "IconListComponent"
                        },
                        {
                            "name": "IconListItemComponent"
                        },
                        {
                            "name": "InfobannerComponent"
                        },
                        {
                            "name": "LightsHelpComponent"
                        },
                        {
                            "name": "LoginComponent"
                        },
                        {
                            "name": "MatAccordionResponsiveComponent"
                        },
                        {
                            "name": "MatSqButtonComponent"
                        },
                        {
                            "name": "MediacontrolComponent"
                        },
                        {
                            "name": "PageNotFoundComponent"
                        },
                        {
                            "name": "RegisterComponent"
                        },
                        {
                            "name": "RoomComponent"
                        },
                        {
                            "name": "SocialComponent"
                        },
                        {
                            "name": "TaskComponent"
                        },
                        {
                            "name": "TaskListComponent"
                        },
                        {
                            "name": "UserComponent"
                        },
                        {
                            "name": "WelcomeComponent"
                        },
                        {
                            "name": "WorkoutToolsComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AppRoutingModule"
                        },
                        {
                            "name": "NgOptimizedImage"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppRoutingModule",
            "id": "module-AppRoutingModule-170bc763adb96c86ce42b234e3a8ad1e2ca2a872f29293f57426239adac283e09f81d775df51cf20176bb5b13958ae3b2726849c8c9812c3c917089d3e038683",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app-routing.module.ts",
            "methods": [],
            "sourceCode": "import {NgModule} from '@angular/core';\r\nimport {RouterModule, Routes} from '@angular/router';\r\nimport {AboutComponent} from './pages/about/about.component';\r\nimport {BookGymComponent} from \"./pages/book-gym/book-gym.component\";\r\nimport {BookTrainerComponent} from \"./pages/book-trainer/book-trainer.component\";\r\nimport {HomeComponent} from './pages/home/home.component';\r\nimport {LoginComponent} from \"./pages/login/login.component\";\r\nimport {PageNotFoundComponent} from \"./pages/page-not-found/page-not-found.component\";\r\nimport {RegisterComponent} from \"./pages/register/register.component\";\r\nimport {RoomComponent} from \"./pages/room/room.component\";\r\nimport {SocialComponent} from \"./modals/social/social.component\";\r\nimport {UserComponent} from \"./pages/user/user.component\";\r\nimport {WelcomeComponent} from \"./pages/welcome/welcome.component\";\r\n\r\nconst routes: Routes = [\r\n  {path: 'about', component: AboutComponent},\r\n  {path: 'room', component: RoomComponent},\r\n  {path: 'user', component: UserComponent},\r\n  {path: 'book_gym', component: BookGymComponent},\r\n  {path: 'home', component: HomeComponent},\r\n  {path: 'welcome', component: WelcomeComponent},\r\n  {path: 'login', component: LoginComponent},\r\n  {path: 'register', component: RegisterComponent},\r\n  {path: 'book_trainer', component: BookTrainerComponent},\r\n  {path: '', redirectTo: '/welcome', pathMatch: 'full'},\r\n  {path: '**', component: PageNotFoundComponent}\r\n\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    RouterModule.forRoot(routes,\r\n      {enableTracing: true} // <-- debugging purposes only\r\n    )],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule {\r\n}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "actionsData",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/ui-components/task/task.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  onPinTask: action('onPinTask'),\r\n  onArchiveTask: action('onArchiveTask'),\r\n}"
            },
            {
                "name": "Archived",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/ui-components/task/task.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/ui-components/mat-accordion-responsive/mat-accordion-responsive.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryObj<StoryType>",
                "defaultValue": "{}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/ui-components/mat-sq-button/mat-sq-button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryObj<StoryType>",
                "defaultValue": "{}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/ui-components/task/task.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/ui-components/task-list/task-list.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Dumbbell",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/ui-components/mat-sq-button/mat-sq-button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryObj<StoryType>",
                "defaultValue": "{\r\n  args: {\r\n    icon: faDumbbell,\r\n    help_topic: 'help_dumbbells',\r\n    label: 'Dumb&shy;bells',\r\n  },\r\n}"
            },
            {
                "name": "Empty",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/ui-components/task-list/task-list.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Large",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Lights",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/ui-components/mat-sq-button/mat-sq-button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryObj<StoryType>",
                "defaultValue": "{\r\n  args: {\r\n    icon: faLightbulb,\r\n    popup: LightsHelpComponent,\r\n    label: 'Lights',\r\n  },\r\n}"
            },
            {
                "name": "LightsDisabled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/ui-components/mat-sq-button/mat-sq-button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryObj<StoryType>",
                "defaultValue": "{\r\n  args: {\r\n    icon: faLightbulb,\r\n    popup: LightsHelpComponent,\r\n    label: 'Lights',\r\n    disabled: true,\r\n  },\r\n}"
            },
            {
                "name": "Loading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/ui-components/task-list/task-list.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedIn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedIn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedOut",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedOut",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LongRows",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/ui-components/mat-sq-button/mat-sq-button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryObj<StoryType>",
                "defaultValue": "{\r\n  args: {\r\n    label: 'LongButtonDescription',\r\n  },\r\n}"
            },
            {
                "name": "MODULE_DATE_FORMATS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/app.module.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  parse: {\r\n    dateInput: 'dd.LL.yyyy'\r\n  },\r\n  display: {\r\n    dateInput: 'dd.LL.yyyy',\r\n    monthYearLabel: 'LLLL yyyy',\r\n    dateA11yLabel: 'LL',\r\n    monthYearA11yLabel: 'LLLL YYYY'\r\n  }\r\n}"
            },
            {
                "name": "MultiRows",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/ui-components/mat-sq-button/mat-sq-button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryObj<StoryType>",
                "defaultValue": "{\r\n  args: {\r\n    label: 'Long Button Description',\r\n  },\r\n}"
            },
            {
                "name": "OnePanel",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/ui-components/mat-accordion-responsive/mat-accordion-responsive.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryObj<StoryType>",
                "defaultValue": "{\r\n  args: {\r\n    ngContent: '<mat-expansion-panel>\\n' +\r\n      '          <mat-expansion-panel-header>\\n' +\r\n      '            <div class=\"mat-expansion-panel-header-content\">\\n' +\r\n      '              <mat-panel-title>\\n' +\r\n      '                <span>Public Profile</span>\\n' +\r\n      '              </mat-panel-title>\\n' +\r\n      '              <mat-panel-description>\\n' +\r\n      '                <span>Descripton</span>\\n' +\r\n      '              </mat-panel-description>\\n' +\r\n      '            </div>\\n' +\r\n      '          </mat-expansion-panel-header>\\n' +\r\n      '          <p>Describe how you want to be seen by other users.</p>\\n' +\r\n      '        </mat-expansion-panel>',\r\n  },\r\n}"
            },
            {
                "name": "Pinned",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/ui-components/task/task.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Secondary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Small",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<Button>",
                "defaultValue": "(args: Button) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<Header>",
                "defaultValue": "(args: Header) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<Page>",
                "defaultValue": "(args: Page) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/ui-components/task/task.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "args => ({\r\n  props: {\r\n    ...args,\r\n    onPinTask: actionsData.onPinTask,\r\n    onArchiveTask: actionsData.onArchiveTask,\r\n  },\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/ui-components/task-list/task-list.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "args => ({\r\n  props: {\r\n    ...args,\r\n    onPinTask: TaskStories.actionsData.onPinTask,\r\n    onArchiveTask: TaskStories.actionsData.onArchiveTask,\r\n  },\r\n})"
            },
            {
                "name": "WithPinnedTasks",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/ui-components/task-list/task-list.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            }
        ],
        "functions": [],
        "typealiases": [
            {
                "name": "StoryType",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "src/app/ui-components/mat-accordion-responsive/mat-accordion-responsive.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 187
            },
            {
                "name": "StoryType",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "src/app/ui-components/mat-sq-button/mat-sq-button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 187
            }
        ],
        "enumerations": [],
        "groupedVariables": {
            "src/app/ui-components/task/task.stories.ts": [
                {
                    "name": "actionsData",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/ui-components/task/task.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  onPinTask: action('onPinTask'),\r\n  onArchiveTask: action('onArchiveTask'),\r\n}"
                },
                {
                    "name": "Archived",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/ui-components/task/task.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/ui-components/task/task.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Pinned",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/ui-components/task/task.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/ui-components/task/task.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "args => ({\r\n  props: {\r\n    ...args,\r\n    onPinTask: actionsData.onPinTask,\r\n    onArchiveTask: actionsData.onArchiveTask,\r\n  },\r\n})"
                }
            ],
            "src/app/ui-components/mat-accordion-responsive/mat-accordion-responsive.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/ui-components/mat-accordion-responsive/mat-accordion-responsive.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryObj<StoryType>",
                    "defaultValue": "{}"
                },
                {
                    "name": "OnePanel",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/ui-components/mat-accordion-responsive/mat-accordion-responsive.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryObj<StoryType>",
                    "defaultValue": "{\r\n  args: {\r\n    ngContent: '<mat-expansion-panel>\\n' +\r\n      '          <mat-expansion-panel-header>\\n' +\r\n      '            <div class=\"mat-expansion-panel-header-content\">\\n' +\r\n      '              <mat-panel-title>\\n' +\r\n      '                <span>Public Profile</span>\\n' +\r\n      '              </mat-panel-title>\\n' +\r\n      '              <mat-panel-description>\\n' +\r\n      '                <span>Descripton</span>\\n' +\r\n      '              </mat-panel-description>\\n' +\r\n      '            </div>\\n' +\r\n      '          </mat-expansion-panel-header>\\n' +\r\n      '          <p>Describe how you want to be seen by other users.</p>\\n' +\r\n      '        </mat-expansion-panel>',\r\n  },\r\n}"
                }
            ],
            "src/app/ui-components/mat-sq-button/mat-sq-button.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/ui-components/mat-sq-button/mat-sq-button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryObj<StoryType>",
                    "defaultValue": "{}"
                },
                {
                    "name": "Dumbbell",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/ui-components/mat-sq-button/mat-sq-button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryObj<StoryType>",
                    "defaultValue": "{\r\n  args: {\r\n    icon: faDumbbell,\r\n    help_topic: 'help_dumbbells',\r\n    label: 'Dumb&shy;bells',\r\n  },\r\n}"
                },
                {
                    "name": "Lights",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/ui-components/mat-sq-button/mat-sq-button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryObj<StoryType>",
                    "defaultValue": "{\r\n  args: {\r\n    icon: faLightbulb,\r\n    popup: LightsHelpComponent,\r\n    label: 'Lights',\r\n  },\r\n}"
                },
                {
                    "name": "LightsDisabled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/ui-components/mat-sq-button/mat-sq-button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryObj<StoryType>",
                    "defaultValue": "{\r\n  args: {\r\n    icon: faLightbulb,\r\n    popup: LightsHelpComponent,\r\n    label: 'Lights',\r\n    disabled: true,\r\n  },\r\n}"
                },
                {
                    "name": "LongRows",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/ui-components/mat-sq-button/mat-sq-button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryObj<StoryType>",
                    "defaultValue": "{\r\n  args: {\r\n    label: 'LongButtonDescription',\r\n  },\r\n}"
                },
                {
                    "name": "MultiRows",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/ui-components/mat-sq-button/mat-sq-button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryObj<StoryType>",
                    "defaultValue": "{\r\n  args: {\r\n    label: 'Long Button Description',\r\n  },\r\n}"
                }
            ],
            "src/app/ui-components/task-list/task-list.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/ui-components/task-list/task-list.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Empty",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/ui-components/task-list/task-list.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Loading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/ui-components/task-list/task-list.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/ui-components/task-list/task-list.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "args => ({\r\n  props: {\r\n    ...args,\r\n    onPinTask: TaskStories.actionsData.onPinTask,\r\n    onArchiveTask: TaskStories.actionsData.onArchiveTask,\r\n  },\r\n})"
                },
                {
                    "name": "WithPinnedTasks",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/ui-components/task-list/task-list.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ],
            "src/stories/Button.stories.ts": [
                {
                    "name": "Large",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Secondary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Small",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<Button>",
                    "defaultValue": "(args: Button) => ({\r\n  props: args,\r\n})"
                }
            ],
            "src/stories/Header.stories.ts": [
                {
                    "name": "LoggedIn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "LoggedOut",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<Header>",
                    "defaultValue": "(args: Header) => ({\r\n  props: args,\r\n})"
                }
            ],
            "src/stories/Page.stories.ts": [
                {
                    "name": "LoggedIn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "LoggedOut",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<Page>",
                    "defaultValue": "(args: Page) => ({\r\n  props: args,\r\n})"
                }
            ],
            "src/app/app.module.ts": [
                {
                    "name": "MODULE_DATE_FORMATS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/app.module.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  parse: {\r\n    dateInput: 'dd.LL.yyyy'\r\n  },\r\n  display: {\r\n    dateInput: 'dd.LL.yyyy',\r\n    monthYearLabel: 'LLLL yyyy',\r\n    dateA11yLabel: 'LL',\r\n    monthYearA11yLabel: 'LLLL YYYY'\r\n  }\r\n}"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {
            "src/app/ui-components/mat-accordion-responsive/mat-accordion-responsive.stories.ts": [
                {
                    "name": "StoryType",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "src/app/ui-components/mat-accordion-responsive/mat-accordion-responsive.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 187
                }
            ],
            "src/app/ui-components/mat-sq-button/mat-sq-button.stories.ts": [
                {
                    "name": "StoryType",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "src/app/ui-components/mat-sq-button/mat-sq-button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 187
                }
            ]
        }
    },
    "routes": {
        "name": "<root>",
        "kind": "module",
        "className": "AppModule",
        "children": [
            {
                "name": "routes",
                "filename": "src/app/app-routing.module.ts",
                "module": "AppRoutingModule",
                "children": [
                    {
                        "path": "about",
                        "component": "AboutComponent"
                    },
                    {
                        "path": "room",
                        "component": "RoomComponent"
                    },
                    {
                        "path": "user",
                        "component": "UserComponent"
                    },
                    {
                        "path": "book_gym",
                        "component": "BookGymComponent"
                    },
                    {
                        "path": "home",
                        "component": "HomeComponent"
                    },
                    {
                        "path": "welcome",
                        "component": "WelcomeComponent"
                    },
                    {
                        "path": "login",
                        "component": "LoginComponent"
                    },
                    {
                        "path": "register",
                        "component": "RegisterComponent"
                    },
                    {
                        "path": "book_trainer",
                        "component": "BookTrainerComponent"
                    },
                    {
                        "path": "",
                        "redirectTo": "/welcome",
                        "pathMatch": "full"
                    },
                    {
                        "path": "**",
                        "component": "PageNotFoundComponent"
                    }
                ],
                "kind": "module"
            }
        ]
    },
    "coverage": {
        "count": 3,
        "status": "low",
        "files": [
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/app.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "MODULE_DATE_FORMATS",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/helpers/CustomValidators.ts",
                "type": "class",
                "linktype": "classe",
                "name": "CustomValidators",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/helpers/base/base.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BaseComponent",
                "coveragePercent": 25,
                "coverageCount": "1/4",
                "status": "low"
            },
            {
                "filePath": "src/app/helpers/base/base.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Observable",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/modals/help/blinds-help/blinds-help.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BlindsHelpComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modals/help/climate-help/climate-help.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ClimateHelpComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/modals/help/door-help/door-help.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DoorHelpComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modals/help/help.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HelpComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/modals/help/lights/lights-help.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LightsHelpComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/modals/mediacontrol/mediacontrol.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MediacontrolComponent",
                "coveragePercent": 6,
                "coverageCount": "1/16",
                "status": "low"
            },
            {
                "filePath": "src/app/modals/social/social.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SocialComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/modals/workout-tools/workout-tools.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "WorkoutToolsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/models/gym.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Gym",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/models/task.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Task",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/about/about.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AboutComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/book-gym/book-gym.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BookGymComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/book-trainer/book-trainer.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BookTrainerComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/home/home.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HomeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/18",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/login/login.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LoginComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/page-not-found/page-not-found.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PageNotFoundComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/register/register.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RegisterComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/room/room.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RoomComponent",
                "coveragePercent": 2,
                "coverageCount": "1/40",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/user/user.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "UserComponent",
                "coveragePercent": 4,
                "coverageCount": "1/22",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/welcome/welcome.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "WelcomeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/services/api.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "ApiService",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/services/data.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "DataService",
                "coveragePercent": 0,
                "coverageCount": "0/14",
                "status": "low"
            },
            {
                "filePath": "src/app/services/timer.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "TimerService",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/ui-components/booking-card/booking-card.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BookingCardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "src/app/ui-components/gym-card/gym-card.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "GymCardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/ui-components/icon-list-item/icon-list-item.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "IconListItemComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/ui-components/icon-list/icon-list.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "IconListComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/ui-components/infobanner/infobanner.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "InfobannerComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/ui-components/mat-accordion-responsive/mat-accordion-responsive.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MatAccordionResponsiveComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/ui-components/mat-accordion-responsive/mat-accordion-responsive.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/ui-components/mat-accordion-responsive/mat-accordion-responsive.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "OnePanel",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/ui-components/mat-sq-button/mat-sq-button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MatSqButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/ui-components/mat-sq-button/mat-sq-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/ui-components/mat-sq-button/mat-sq-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Dumbbell",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/ui-components/mat-sq-button/mat-sq-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Lights",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/ui-components/mat-sq-button/mat-sq-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LightsDisabled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/ui-components/mat-sq-button/mat-sq-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LongRows",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/ui-components/mat-sq-button/mat-sq-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "MultiRows",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/ui-components/task-list/task-list.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TaskListComponent",
                "coveragePercent": 80,
                "coverageCount": "4/5",
                "status": "very-good"
            },
            {
                "filePath": "src/app/ui-components/task-list/task-list.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/ui-components/task-list/task-list.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Empty",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/ui-components/task-list/task-list.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Loading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/ui-components/task-list/task-list.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/ui-components/task-list/task-list.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithPinnedTasks",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/ui-components/task/task.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TaskComponent",
                "coveragePercent": 33,
                "coverageCount": "2/6",
                "status": "medium"
            },
            {
                "filePath": "src/app/ui-components/task/task.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "actionsData",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/ui-components/task/task.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Archived",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/ui-components/task/task.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/ui-components/task/task.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Pinned",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/ui-components/task/task.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Large",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Secondary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Small",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedIn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedOut",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedIn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedOut",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/User.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "User",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 83,
                "coverageCount": "5/6",
                "status": "very-good"
            },
            {
                "filePath": "src/stories/header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/stories/page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            }
        ]
    }
}